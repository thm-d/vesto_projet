{"version":3,"sources":["dataProvider.js","users.js","lists/listesList.js","lists/generalFormTab.js","equipments/equipmentAttributesChoices.js","equipmentProcessing/addOnlineShop.js","comments/comments.js","equipmentProcessing/equipmentProcessingEdit.js","equipments/equipmentEdit.js","equipments/equipmentList.js","operations/operationsList.js","operations/savList.js","operations/operationEdit.js","lists/EquipmentQuickAddButton.js","lists/EquipmentQuickDeleteButton.js","equipments/equipmentCards.js","lists/wantedEquipment.js","lists/createQuote.js","lists/quoteFormTab.js","lists/proformaFormTab.js","lists/listEdit.js","clients.js","lists/listCreate.js","equipmentProcessing/equipmentProcessingList.js","equipmentProcessing/equipmentProcessingCreate.js","Layout.js","operations/savEdit.js","partners_bill/partnersBillList.js","partners_bill/partnersBillEdit.js","clients_bill/clientsBillList.js","clients_bill/clientsBillEdit.js","refurbisher/refurbisherList.js","refurbisher/refurbisherEdit.js","App.js","reportWebVitals.js","index.js"],"names":["endPoints","fetchDataList","url","pages","fetchDataListOnePage","page","max_page","total","offset","formattedData","fetch","then","res","json","records","length","data","map","record","catch","error","console","log","fetchDataListPages","a","max","per_page","concat","fetchDataOne","getFilterFormula","filter","filterByFormula","counter","view","size","Object","keys","forEach","key","apiUrl","getList","resource","params","pagination","perPage","sort","field","order","toLowerCase","getOne","id","getMany","ids","getManyReference","target","list_filter","create","method","body","JSON","stringify","headers","createData","fields","updateMany","push","updateDataMany","update","updateData","deleteMany","i","deleteDataMany","delete","deleteData","users","useStyles","makeStyles","theme","root","maxWidth","ListTitle","OwnerFilter","props","Filter","context","TextInput","label","source","alwaysOn","SelectInput","choices","defaultValue","preSalesStatus","name","number","salesStatus","afterSalesStatus","statusChoices","tabs","TabbedDatagrid","listContext","useListContext","filterValues","setFilters","displayedFilters","handleChange","useCallback","event","value","classes","Grid","container","spacing","item","xs","Card","CardContent","Tabs","orientation","centered","indicatorColor","textColor","onChange","choice","Tab","ListContextProvider","Datagrid","rowClick","TextField","ReferenceField","reference","ArrayField","SingleFieldList","ChipField","CloneButton","Pagination","OwnerButton","useState","open","setOpen","setLabel","React","anchorEl","setAnchorEl","Button","onClick","currentTarget","color","startIcon","onClose","owner","MenuItem","newFilters","handleChangeSort","data-sort","TabbedListList","ListBase","filterDefaultValues","TopToolbar","filters","CreateButton","basePath","ExportButton","sourceChoices","ClientForm","values","useFormState","setClientProps","variant","className","inlineField","fullWidth","inline23Field","optionText","multiline","CompanyForm","setCompanyProps","GeneralFormTab","FormTab","contentClassName","formClassName","inlineHalfField","helperText","optionValue","Typography","link","FormWithRedirect","render","formProps","save","ReferenceArrayField","alimentationChoices","etatChoices","equipmentStatusChoices","dataProvider","customDataProvider","addOnlineShop","notify","api_key","secret_code","badges","badge","toString","variations","variation_0_data","variation_1_data","variation_2_data","variation_3_data","response","response_data","clientUrl","variation_response","variation_1_response","variation_2_response","variation_3_response","requestedProps","validateValues","isError","setError","prop","reduction","replaceUrl","refresh","equipmentTransform","AddOnlineShopButton","useNotify","useRefresh","loading","setLoading","handleClick","window","disabled","pristine","CircularProgress","stepper","background","card","marginLeft","minWidth","height","overflow","maxHeight","boxShadow","addCard","width","title","marginBottom","grid","AddCommentFormContent","handleSubmitWithRedirect","saving","setSaved","saved","form","useForm","change","validate","required","SelectArrayInput","SaveButton","AddCommentForm","useCreate","handleSubmit","recordId","author","tagued","user","location","href","payload","onSuccess","onFailure","message","Comments","useGetList","useEffect","document","getElementById","element","scrollTop","scrollHeight","updateScroll","Stepper","Step","expanded","active","completed","StepLabel","StepIconComponent","MessageIcon","Date","date","toLocaleDateString","StepContent","comment","Comment","display","marginRight","inline6Field","red","fontWeight","green","toolbar","justifyContent","list","listStyleType","image","margin","CustomImageField","emptyText","source1","source2","src","sourceValue0","sourceValue1","sourceValue2","sourceValue","component","Array","isArray","style","file","index","fileTitleValue","srcValue","rel","alt","titleValue","EquipmentProcessingForm","getCat","subCategories","setSubCategories","price","setPrice","initialPrice","setInitialPrice","Math","round","SimpleForm","warnWhenUnsavedChanges","NumberInput","FunctionField","ReferenceArrayInput","AutocompleteArrayInput","setFilter","meta","addLabel","FileField","EquipmentProcessingActions","Toolbar","redirect","DeleteButton","EquipmentProcessingEdit","Edit","undoable","transform","validateError","aside","StyledImageField","styled","StyledProperties","span","marginRigth","chip","chipMargin","alignItems","edit","newData","attachment","rawFile","userChoice","EquipmentForm","newProps","Price","InitialPrice","setChanged","UrlField","DateField","StyledDiv","div","CardEquipmentEdit","useGetOne","changed","controllerProps","useEditController","IconButton","onCancel","EditContextProvider","EditView","EquipmentEdit","Category","EquipmentImage","colorsForRefurbisher","StyledGridListTile","withStyles","GridListTile","EquipmentFilter","FilterLiveSearch","FilterList","category","FilterListItem","LoadedEquipmentList","selectedId","setSelectedId","handleClickWithId","Box","GridList","cols","cellHeight","selected","Equipment","gridListProps","Link","to","linkToRecord","backgroundStyle","borderStyle","assign","Chip","GridListTileBar","subtitle","NumberField","options","currency","EquipmentList","history","useHistory","handleClose","Fragment","m","path","match","isMatch","Drawer","anchor","longTermStatusChoices","shortTermStatusChoices","TabbedOperationsList","SAVStatusChoices","TabbedSAVList","statutsChoices","listTransform","OperationEdit","DateTimeInput","editable","EquipmentQuickAddButton","showDialog","setShowDialog","equipmentId","setEquipmentId","handleCloseClick","var","Dialog","DialogTitle","DialogContent","DialogActions","createMuiTheme","palette","primary","EquipmentQuickDeleteButton","equipmentQuickDelete","setDeleting","splice","indexOf","ThemeProvider","edge","aria-label","EquipmentDiv","StyledCard","StyledCardContent","colorsForStatus","EquipmentCards","openId","setOpenId","deleting","flexDirection","justify","StyledCreate","Create","wantedEquipmentTransform","wantedEquipmentCreateTransform","EquipmentDataGrid","WantedEquipmentTitle","RichTextField","WantedEquipmentList","expand","WantedEquipmentEdit","BooleanInput","WantedEquipmentCreate","CreateQuoteButton","documentRecord","documentVariant","deposit","clientId","client","productToFetch","products","useGetMany","lrms","useUpdateMany","createQuote","productsData","lrmsData","numberList","typeList","modelList","alimentationList","priceList","dimensionList","productsIds","product","includes","quoteData","j","encodeURI","ww","close","StyledAccordion","Accordion","ServiceDialog","serviceId","setServiceId","services","setServices","getServices","handleSave","Autocomplete","newValue","getOptionLabel","service","renderInput","QuoteFormTab","inlineLinkField","AccordionSummary","AccordionDetails","Table","TableBody","TableRow","TableCell","scope","align","ProformaFormTab","ClientDetails","RouterLink","clientTransform","companyTransform","TabbedListEdit","useUpdate","clientProps","companyProps","CustomToolbar","alwaysEnableSaveButton","handleClientSave","clientData","companyData","TabbedForm","pathname","search","1","2","3","4","5","6","7","8","9","10","11","12","ListeEdit","statusNumber","valdateRequestedProps","status","getStatusNumber","errorText","ClientPagination","rowsPerPageOptions","CustomClientList","List","actions","EmailField","ClientEdit","switch","ListCreateForm","formClasses","formUseStyles","createList","clients","setClients","newClient","setNewClient","useDataProvider","useRedirect","getClients","saveProps","FormGroup","row","FormControlLabel","control","Switch","checked","AutocompleteInput","ReferenceInput","ListCreate","setClientId","getClientId","TabbedEquipmentProcessingList","createTransformData","photos","photo","photo2","photo3","photosPlaque","ficheTechnique","EquipmentProcessingCreate","StyledMenuItem","MenuItemLink","icon","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","CustomLayout","Layout","menu","Menu","onMenuClick","menuOps","menuSales","menuMkp","menuAdmin","state","setState","handleToggle","dense","mt","DashboardMenuItem","isOpen","primaryText","leftIcon","SubMenu","children","header","button","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","disablePadding","SAVEdit","setId","billsStatus","TabbedPartnersBillList","PartnersBillEditForm","DateInput","PartnersBillEdit","PartnersBillCreate","refurbishers","setRefurbishers","getRefurbishers","BooleanField","TabbedClientsBillList","ClientsBillEditForm","amount","setAmount","ClientsBillEdit","ClientsBillCreate","RefurbisherList","typeChoices","activChoices","mkpStatusChoices","refurbisherTransform","RefurbisherEdit","RefurbisherCreate","typography","h6","fontSize","main","contrastText","secondary","light","dark","App","Admin","layout","Resource","ListGuesser","EditGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f8497bd9.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n\n\nconst endPoints = {\n    'vesto_stock': 'vesto stock',\n    'clients': 'clients',\n    'listes': 'listes',\n    'machines_desirees': 'machines désirées',\n    'categories': 'catégories',\n    'retraitement_machines': 'vesto stock',\n    'operations': 'listes',\n    'sav': 'listes',\n    'factures': 'factures reconditionneurs',\n    'reconditionneurs': 'reconditionneurs',\n    'comments': 'commentaires',\n    'services': 'vesto stock',\n    'factures_clients': 'factures clients'\n}\n\n\nconst fetchDataList = (url: string, pages: Number) => {   \n    return (fetchDataListOnePage(url, 1, pages, 0))\n}\n\nconst fetchDataListOnePage = (url: string, page: Number, max_page: Number, total: Number, offset = '', formattedData = true) => {\n    // page: first page to fetch\n    // max_pages: last page to fetch\n    return fetch(url + `&offset=${offset}&api_key=keysF0s3bC0g7ODOW`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                total += res.records ? res.records.length : 0\n                if (res.offset && page < max_page) {\n                    //console.log('in if', page, max_page)\n                    return (fetchDataListOnePage(url, page + 1, max_page, total, res.offset));\n                } else {\n                    if (formattedData) {\n                        var records = res.records.map(record => record['fields']);\n                        const data = {data: records, total: res.offset ? total + 1 : total}\n                        //console.log('fetch page ', page, max_page, data)\n                        return data\n                    } else {\n                        return (res)\n                    }\n                }\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst fetchDataListPages = async (url: string, max = 10000) => {\n    console.log('fetch pages', url, max)\n    let per_page = 100\n    let page = 1\n    let offset = ''\n    let total = 0\n    let records = []\n    console.log(offset && (page * per_page < max))\n    while ( page === 1 || (offset && (page * per_page < max))) {\n        let res = await fetchDataListOnePage(url, page, page, total, offset, false)\n        offset = res.offset\n        total += offset ? per_page : (res.records ? res.records.length : 0)\n        page ++\n        records = records.concat(res.records.map(record => record['fields']))\n    }\n    return ({data: records, total: total})\n}\n\nconst fetchDataOne = async (url: string) => {\n    return fetch(url + \"?api_key=keysF0s3bC0g7ODOW\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                const data = {data: res['fields']}\n                //console.log('fetched data one: ', url, data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\n\nconst createData = (url: string, data: Object) => {\n    return fetch(url + \"?api_key=keysF0s3bC0g7ODOW\", \n        {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { \n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                var records = res.records.map(record => record['fields']);\n                const data = {data: records[0]}\n                //console.log('created record: ', data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst updateData = (url: string, data: Object) => {\n    return fetch(url + \"?api_key=keysF0s3bC0g7ODOW\", \n        {\n            method: 'PATCH',\n            body: JSON.stringify(data),\n            headers: { \n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                var records = res.records.map(record => record['fields']);\n                const data = {data: records[0]}\n                //console.log('updated record: ', data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst updateDataMany = (url: string, data: Object) => {\n    return fetch(url + \"?api_key=keysF0s3bC0g7ODOW\", \n        {\n            method: 'PATCH',\n            body: JSON.stringify(data),\n            headers: { \n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                var ids = res.records.map(record => record['id']);\n                const data = {data: ids}\n                //console.log('updated record: ', data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst deleteDataMany = (url: string) => {\n    return fetch(url + \"&api_key=keysF0s3bC0g7ODOW\", \n        {\n            method: 'DELETE'\n        })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                var ids = res.records.map(record => record['id']);\n                const data = {data: ids}\n                //console.log('deleted records: ', data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst deleteData = (url: string) => {\n    return fetch(url + \"&api_key=keysF0s3bC0g7ODOW\", \n        {\n            method: 'DELETE'\n        })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n                const data = {data: res.records}\n                //console.log('deleted records: ', data)\n                return data;\n\t\t\t})\n            .catch(error => console.log(error))\n}\n\nconst getFilterFormula = (filter) => {\n    var filterByFormula = \"\";\n    var counter = 1;\n    var view = ''\n    // if view in object, get it off\n    if ('view' in filter) {\n        view = `&view=${filter['view']}`\n        delete filter.view;\n    }\n    const size = filter && Object.keys(filter).length;\n    if (size > 1) {\n        filterByFormula += size > 1 ? 'AND(' : '';\n        Object.keys(filter).forEach(key => {\n            filterByFormula += `{${key}}='${filter[key]}'`\n            if (size > 1) {\n                filterByFormula += (counter === size) ? ')' : ', ';\n            }\n            counter ++;\n        });\n    }\n    if (size === 1) {\n        filterByFormula += `{${Object.keys(filter)[0]}}='${filter[Object.keys(filter)[0]]}'`\n    }\n    return(filterByFormula + view)\n}\n\nexport default (\n    apiUrl: string\n    ): customDataProvider => ({\n\n    getList: (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const filter = params.filter;\n        console.log('get liste', perPage)\n        // filter\n        \n        let filterByFormula = getFilterFormula(filter)\n\n        // sort\n        const sort = `sort%5B0%5D%5Bfield%5D=${field}&sort%5B0%5D%5Bdirection%5D=${order.toLowerCase()}`;\n\n\n        if (perPage > 100) {\n            const url = `${apiUrl}/${endPoints[resource]}?pageSize=${100}&${sort}&filterByFormula=${filterByFormula}`;\n            return (fetchDataListPages(url, perPage))\n        } else {\n            const url = `${apiUrl}/${endPoints[resource]}?pageSize=${perPage}&${sort}&filterByFormula=${filterByFormula}`;\n            return (fetchDataList(url, page))\n        }        \n\n    },\n\n\n    getOne: (resource, params) => {\n        //console.log('get one', params, resource)\n        const url = `${apiUrl}/${endPoints[resource]}/${params.id}`;\n        return fetchDataOne(url)\n    },\n\n    getMany: (resource, params) => {\n        //console.log('in get many ', params)\n        const ids = params.ids;\n        let size = ids.length;\n        var filterByFormula = \"\";\n        var counter = 1;\n        if (size > 1) {\n            filterByFormula += size > 1 ? 'OR(' : '';\n            ids.forEach(id => {\n                filterByFormula += `{id} = '${id}'`\n                if (size > 1) {\n                    filterByFormula += (counter === size) ? ')' : ', ';\n                }\n                counter ++;\n            });\n        }\n        if (size === 1) {\n            filterByFormula += `{id} ='${ids[Object.keys(ids)[0]]}'`\n        }\n    const url = `${apiUrl}/${endPoints[resource]}?filterByFormula=${filterByFormula}`;\n    return (fetchDataList(url, size < 100 ? size : 100));\n    },\n\n    getManyReference: (resource, params) => {\n        const target = params.target;\n        const id = params.id;\n        const filter = params.filter;\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n\n        let list_filter = { [target]: id, ...filter }\n        //console.log(target, list_filter)\n\n        // filter\n        let filterByFormula = getFilterFormula(list_filter)\n\n        // sort\n        const sort = `sort%5B0%5D%5Bfield%5D=${field}&sort%5B0%5D%5Bdirection%5D=${order.toLowerCase()}`;\n\n        const url = `${apiUrl}/${endPoints[resource]}?pageSize=${perPage}&${sort}&filterByFormula=${filterByFormula}`;\n        return fetchDataList(url, page)\n    },\n\n\n    create: (resource, params) => {\n        const data = params.data;\n\n        let url = `${apiUrl}/${endPoints[resource]}`\n        let new_data = { records: [ { fields: data } ]}\n\n        return createData(url, new_data);\n    },\n\n    updateMany: (resource, params) => {\n        const ids = params.ids;\n        const data = params.data;\n\n        let url = `${apiUrl}/${endPoints[resource]}`;\n        let records = [];\n        ids.forEach( id => {\n            records.push({ id: id, fields: data })\n        })\n        let new_data = { records: records }\n\n        return (updateDataMany(url, new_data))\n    \n    },\n\n    update: (resource, params) => {\n        //console.log('update resource data', resource, params)\n        const id = params.id;\n        const data = params.data;\n\n        let url = `${apiUrl}/${endPoints[resource]}`;\n        let new_data = { records: [{ id: id, fields: data }] }\n        //console.log('update', new_data)\n\n\n        return (updateData(url, new_data))\n    },\n\n    deleteMany: (resource, params) => {\n        const ids = params.ids;\n\n        let url = `${apiUrl}/${endPoints[resource]}?records[]=${ids[0]}`;\n\n        for (var i=1; i < ids.length; i++) {\n            url += '&records[]=' + ids[i];\n        }\n\n        return (deleteDataMany(url))\n    \n    },\n\n    delete: (resource, params) => {\n        const id = params.id;\n\n        let url = `${apiUrl}/${endPoints[resource]}?records[]=${id}`;\n\n\n        return (deleteData(url))\n    }\n});","export const users = [\n    {\n        \"id\": \"usr75jDuvBNfjBf45\",\n        \"email\": \"anne-laurene@vesto.fr\",\n        \"name\": \"Anne-Laurène Harmel\"\n    },\n    \n    {\n        \"id\": \"usrWvHr7KgXrcd6iH\",\n        \"email\": \"lucas@vesto.fr\",\n        \"name\": \"Lucas POZZOLI\"\n    },\n\n    {\n        \"id\": \"usrMUK8g7MFldVXtj\",\n        \"email\": \"bastien@vesto.fr\",\n        \"name\": \"Bastien Rambaud\"\n    },\n\n    {\n        \"id\": \"usrzp54A2X7xbZhen\",\n        \"email\": \"wilfrid@vesto.fr\",\n        \"name\": \"Wilfrid Dumas\"\n    }\n]\n\nexport const getUser = (id) => {\n    let user = {}\n    users.forEach(us => {\n        if (us.id === id) {\n            user = us\n        }\n    })\n    return user\n}","import * as React from \"react\";\nimport { Fragment, useCallback, useState } from 'react';\nimport { Datagrid, Filter, TextField, ReferenceField, ArrayField, TextInput, SelectInput, CloneButton, ChipField, SingleFieldList, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, CreateButton, ExportButton } from 'react-admin';\nimport { Card, CardContent, Grid, Button, Tabs, Tab, Menu, MenuItem } from '@material-ui/core';\nimport { users } from '../users';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport PersonIcon from '@material-ui/icons/Person';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '500px',\n    },\n}))\n\n\nexport const ListTitle = ({ record }) => {\n        return <span>Liste {record ? record['Nom'] : ''}</span>;\n    };\n\nconst OwnerFilter = (props) => (\n    <Filter {...props} context=\"button\">\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <SelectInput label=\"Owner\" source=\"owner\" choices={users} alwaysOn/>\n        <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" alwaysOn/>\n    </Filter>\n    );\n\n\nconst preSalesStatus = [\n    { id: '1. A attribuer', name: '1. A attribuer', number: 1 },\n    { id: '2. Affinage du besoin', name: '2. Affinage du besoin', number: 2 },\n    { id: '3. Proforma à recontacter', name: '3. Proforma à recontacter', number: 3 },\n];\n\nconst salesStatus = [\n    { id: '4. Devis à envoyer', name: '4. Devis à envoyer', number: 4 },\n    { id: '5. Devis envoyé', name: '5. Devis envoyé', number: 5 },\n    { id: '6. Devis en négo', name: '6. Devis en négo', number: 6 },\n    { id: '7. Devis signé', name: '7. Devis signé', number: 7 },\n    { id: '8. Passé aux ops', name: '8. Passé aux ops', number: 8 },\n];\n\nconst afterSalesStatus = [\n    { id: '9. Installation terminée', name: '9. Installation terminée', number: 9 },\n    { id: 'Gagné (sous garantie)', name: 'Gagné (sous garantie)', number: 10 },\n    { id: 'Gagné (hors garantie)', name: 'Gagné (hors garantie)', number: 11 },\n    { id: 'Perdu', name: 'Perdu', number: 12 },\n];\n\nexport const statusChoices = preSalesStatus.concat(salesStatus).concat(afterSalesStatus)\n\nconst tabs = [preSalesStatus, salesStatus, afterSalesStatus]\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={3}>\n            {tabs.map(choices => (\n                <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {choices.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.name}\n                            classes={classes}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid> ))}\n            </Grid>\n            <Grid item xs={9}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <TextField source=\"Nom\" />\n                                <ReferenceField source=\"Client\" reference=\"clients\">\n                                <TextField source=\"Client\" />\n                                </ReferenceField>\n                                <ArrayField source=\"Owner\"><SingleFieldList><ChipField source=\"name\" /></SingleFieldList></ArrayField>\n                                <TextField source=\"Période installation souhaitée\" />\n                                <CloneButton />\n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst OwnerButton = props => {\n    const { setFilters, filterValues, displayedFilters } = useListContext();\n    const [open, setOpen] = useState(false)\n    const [label, setLabel] = useState(filterValues['owner'] ? filterValues['owner'] : 'Owner')\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleOwnerClick = (event) => {\n        setOpen(true)\n        setAnchorEl(event.currentTarget);\n    }\n\n    const handleChangeSort = (owner) => {\n        let newFilters = filterValues\n        if ('owner' in filterValues && filterValues['owner'] ===  owner['name']) {\n            delete newFilters['owner']\n            setLabel('Owner')\n        } else {\n            newFilters['owner'] = owner['name']\n            setLabel(owner['name'])\n        }\n        setFilters(newFilters, displayedFilters);\n        setOpen(false)\n    }\n\n    return(\n        <>\n            <Button\n                onClick={handleOwnerClick}\n                label='test'\n                color=\"primary\"\n                startIcon={<PersonIcon/>}\n                size=\"small\">\n                {label}    \n            </Button>\n            <Menu\n                open={open}\n                onClose={() => setOpen(false)}\n                anchorEl={anchorEl}>\n                    {users.map(owner => (\n                        <MenuItem\n                            onClick={() => handleChangeSort(owner)}\n                            data-sort={owner}\n                            key={owner.id}\n                        >\n                            {owner.name}\n                        </MenuItem>\n                    ))}\n            </Menu>\n        </>\n\n    )\n\n}\n\nexport const TabbedListList = props => {\n    return(\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut': '2. Affinage du besoin' }}\n        perPage={10}\n        \n    >\n        <TopToolbar filters={<OwnerFilter/>}>\n            <OwnerButton />\n            <CreateButton basePath=\"/listes\" />\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>)\n};\n","import { Typography, Grid } from '@material-ui/core';\nimport { ReferenceField, SelectInput, FormWithRedirect, ReferenceArrayField, FormTab, TextInput, SingleFieldList, ChipField } from 'react-admin';\nimport { useStyles } from './listEdit';\nimport { statusChoices } from './listesList';\nimport { users } from '../users';\nimport { useFormState } from 'react-final-form';\n\n\nexport const sourceChoices = [\n    { 'id': 'Réseaux sociaux' },\n    { 'id': 'Bouche à oreille' },\n    { 'id': 'Google' },\n    { 'id': 'Facebook' },\n    { 'id': 'Le bon coin' },\n    { 'id': 'Chasse' },\n    { 'id': 'Groupement restaurateurs (ecotable)' },\n    { 'id': 'Autre' },\n\n]\n\nexport const ClientForm = (props) => {\n    let { values } = useFormState();\n    const classes = useStyles()\n    props.setClientProps(values)\n\n    return (\n        <Grid {...props} container spacing={0}>\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth source='Nom' />\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth source='Prénom' />\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth source='Téléphone' />\n            <TextInput variant='outlined' className={classes.inline23Field} fullWidth source='email' />\n            <SelectInput choices={sourceChoices} optionText='id' variant='outlined' className={classes.inlineField} fullWidth source='Source' />\n            <TextInput variant='outlined' multiline className={classes.fullWidth} fullWidth source='Notes' />\n        </Grid>\n    )\n}\n\nexport const CompanyForm = (props) => {\n    let { values } = useFormState();\n    const classes = useStyles()\n    props.setCompanyProps(values)\n\n    return (\n        <Grid {...props} container spacing={0}>\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth source='Entreprise' />\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth source='Adresse' />\n            <TextInput variant='outlined' className={classes.inlineField} fullWidth label='SIRET' source='SIRET' />\n            <TextInput variant='outlined' multiline className={classes.fullWidth} fullWidth source='Concept / Notes entreprise' />\n        </Grid>)\n}\n\n\nexport const GeneralFormTab = props => {\n    const classes = useStyles()\n    return (\n        <FormTab\n            label=\"Général\"\n            contentClassName={''}\n            variant='outlined'\n            {...props}\n        >\n            <TextInput source='Nom' formClassName={classes.fullWidth} fullWidth />\n            <SelectInput source=\"Statut\" formClassName={classes.inlineHalfField} optionText='id' choices={statusChoices} />\n            <SelectInput error={props.error && props.error['Owner']} helperText={props.error && props.error['Owner']} formClassName={classes.inlineHalfField} source=\"Owner name\" label='Owner' optionText='name' optionValue='name' choices={users} />\n            <br /><Typography variant='h6'>Infos Client</Typography>\n            <ReferenceField link={false} fullWidth source='Client[0]' label='' reference='clients'>\n                <FormWithRedirect {...props} setClientProps={props.setClientProps} render={formProps => <ClientForm {...formProps} />} />\n            </ReferenceField>\n            <br /><Typography variant='h6'>Infos Entreprise</Typography>\n            <ReferenceField link={false} fullWidth source='Client[0]' label='' reference='clients'>\n                <FormWithRedirect {...props} setCompanyProps={props.setCompanyProps} save={(data) => console.log(data)} render={formProps => <CompanyForm {...formProps} />} />\n            </ReferenceField>\n\n            <Typography variant='h6'>Toutes les demandes du client</Typography>\n            <ReferenceField link={false} fullWidth source='Client[0]' label='' reference='clients'>\n                <ReferenceArrayField source='Listes' reference='listes'>\n                    <SingleFieldList>\n                        <ChipField source='Nom' />\n                    </SingleFieldList>\n                </ReferenceArrayField>\n            </ReferenceField>\n        </FormTab>\n    )\n}","export const alimentationChoices = [\n    {id: 'Monophasé (230V - 50Hz)', 'name': 'Monophasé (230V - 50Hz)'},\n    {id: 'Triphasé (380-400V - 50Hz)', 'name': 'Triphasé (380-400V - 50Hz)'},\n    {id: 'Gaz', 'name': 'Gaz'},\n]\n\nexport const etatChoices = [\n    {id: 'Nickel-Chrome', 'name': 'Nickel-Chrome'},\n    {id: 'Très bon état', 'name': 'Très bon état'},\n    {id: 'Etat correct', 'name': 'Etat correct'},\n    {id: 'Pas bien beau', 'name': 'Pas bien beau'},\n]\n\nexport const equipmentStatusChoices = [\n    {id: 'A retraiter', name: 'A retraiter'},\n    {id: 'En attente de relecture', name: 'En attente de relecture'},\n    {id: 'Bloqué', name: 'Bloqué'},\n    {id: 'Sur E-shop', name: 'Sur E-shop'},\n    {id: 'Disponible', name: 'Disponible'},\n    {id: 'Réservé', name: 'Réservé'},\n    {id: 'Vendu hors Vesto', name: 'Vendu hors Vesto'},\n    {id: 'Vendu par Vesto', name: 'Vendu par Vesto'},\n    \n\n]","import { useNotify, useRefresh } from 'react-admin';\nimport { Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport customDataProvider from '../dataProvider';\nimport { equipmentTransform } from '../equipments/equipmentEdit';\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\n\n\nconst addOnlineShop = async (record, notify) => {\n\n    // create a draft product in woocommerce\n    let api_key = 'ck_6a6f1c2c366888c899cc63da01c68917b684c3dd';\n    let secret_code = 'cs_ca5d86211b3f8b40bd21ca2831eeb8269c2d4afa';\n\n    let badges = {\n        'Nickel-Chrome': 'nickel-chrome',\n        'Très bon état': 'tres-bon-etat',\n        'Etat correct': 'etat-correct',\n        'Pas bien beau': 'pas-bien-beau',\n    }\n\n    let badge = ''\n    if (record[\"Etat\"]) {\n        badge = badges[record[\"Etat\"]] \n    }\n\n    let data = {\n        \"name\": record.[\"Type\"] + \" \" + record.[\"Marque\"] + \" - \" + record.[\"Modele\"],\n        \"type\": \"variable\",\n        \"status\": \"draft\",\n        \"regular_price\": record.[\"Prix neuf HT\"].toString() || '10000',\n        \"sale_price\": record.[\"Prix HT\"].toString() && record.[\"Prix HT\"].toString(),\n        \"description\": \"<p><strong>Les plus du produit</strong></p>Ajouter des plus\",\n        \"short_description\": \"<p><strong style=\\\"color: #04605e;\\\">Les engagements de Vesto</strong><br />\\n<img class=\\\"alignnone wp-image-1412\\\" src=\\\"https://vesto.fr/wp-content/uploads/2020/04/check-3-300x300.png\\\" alt=\\\"\\\" width=\\\"21\\\" height=\\\"21\\\" /> Garantie 6 mois, pièces et main d&rsquo;&oelig;uvre<br />\\n<img class=\\\"alignnone wp-image-1412\\\" src=\\\"https://vesto.fr/wp-content/uploads/2020/04/check-3-300x300.png\\\" alt=\\\"\\\" width=\\\"22\\\" height=\\\"22\\\" /> Parfait état de marche<br />\\n<img class=\\\"alignnone wp-image-1412\\\" src=\\\"https://vesto.fr/wp-content/uploads/2020/04/check-3-300x300.png\\\" alt=\\\"\\\" width=\\\"21\\\" height=\\\"21\\\" /> Entièrement reconditionné</p>\\n<p><strong style=\\\"color: #04605e;\\\">L&rsquo;avis de Vesto</strong><br />\" + record.[\"Avis Vesto\"] + \"</p>\\n\",\n        \"attributes\": [\n                {\n                    \"id\": 9,\n                    \"name\": \"Localisation\",\n                    \"position\": 0,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        (record.[\"Localisation\"] && record.[\"Localisation\"].toString()) || \"Paris\"\n                    ]\n                },\n                {\n                    \"id\": 0,\n                    \"name\": \"Poids\",\n                    \"position\": 8,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Poids\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"Marque\",\n                    \"position\": 1,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Marque\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 3,\n                    \"name\": \"Modèle\",\n                    \"position\": 2,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Modele\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 4,\n                    \"name\": \"Dimensions (mm)\",\n                    \"position\": 3,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Dimensions\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 6,\n                    \"name\": \"Alimentation\",\n                    \"position\": 3,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Alimentation\"][0] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 7,\n                    \"name\": \"Puissance (kw)\",\n                    \"position\": 4,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Puissance\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 8,\n                    \"name\": \"Capacité\",\n                    \"position\": 5,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Capacité\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 1,\n                    \"name\": \"Année de fabrication\",\n                    \"position\": 6,\n                    \"visible\": true,\n                    \"variation\": false,\n                    \"options\": [\n                        record.[\"Année\"] || \"\"\n                    ]\n                },\n                {\n                    \"id\": 21,\n                    \"name\": \"Etat\",\n                    \"position\": 8,\n                    \"visible\": false,\n                    \"variation\": true,\n                    \"options\": badge === 'pas-bien-beau' ? [\"Pas Bien Beau\"] :\n                        [\"Nickel-Chrome\",\n                        \"Très Bon Etat\",\n                        \"Etat Correct\"\n                    ]\n                },\n            ],\n            \"default_attributes\": [\n                record.[\"Etat\"] && {\n                    \"id\": 21,\n                    \"name\": \"Etat\",\n                    \"option\": badge\n                }\n            ],\n            \"meta_data\": [\n                {\n                    \"id\": 7818,\n                    \"key\": \"yikes_woo_products_tabs\",\n                    \"value\": [\n                        {\n                            \"title\": \"Transparence des prix\",\n                            \"id\": \"transparence-des-prix\",\n                            \"content\": \"Pas d'entourloupes chez VESTO ! Voici plus d'informations sur les prix que vous voyez sur cette page :)\\r\\n\\r\\nLe <strong style=\\\"color: #04605e;\\\">prix neuf indiqué</strong> (rayé) est le prix indicatif public, c'est-à-dire, le <strong style=\\\"color: #04605e;\\\">prix constaté chez les revendeurs et distributeurs</strong> de cet équipement.\\r\\n\\r\\nLe <strong style=\\\"color: #04605e;\\\">prix de vente indiqué n'inclut pas le service de livraison</strong>. (plus d'informations dans l'onglet Livraison)\"\n                        },\n                        {\n                            \"title\": \"Livraison\",\n                            \"id\": \"livraison\",\n                            \"content\": \"Une fois votre réservations effectuée, nous vous contacterons pour préciser vos besoins et établir des <strong style=\\\"color: #04605e;\\\">devis chez nos partenaires transporteurs.</strong> Nous choisirons le plus compétitif pour vous assurer une <strong style=\\\"color: #04605e;\\\">livraison au meilleur prix</strong> !\\r\\n\\r\\nChez VESTO, nous avons à cœur de vous proposer la meilleure expérience possible ! C'est pour cela que l'<strong style=\\\"color: #04605e;\\\">on travaille en ce moment sur l'intégration d'un module de livraison</strong> qui vous permettra, très bientôt, de calculer directement les coûts de livraison depuis le site internet.\"\n                        }\n                    ]\n                },\n            ]\n\n    }\n\n    //create variations\n    let variations = [];\n    if (badge === 'pas-bien-beau') {\n        let variation_0_data = {\n            \"regular_price\": (record.[\"Prix neuf HT\"].toString() || '10000') || '',\n            \"sale_price\": record.[\"Prix HT\"].toString() || '',\n            \"manage_stock\": (true) || false,\n            \"stock_quantity\": 1,\n            \"attributes\": [\n                    {\n                        \"id\": 21,\n                        \"name\": \"Etat\",\n                        \"option\": \"Pas Bien Beau\"\n                    }\n                ],\n        }\n        variations.push(variation_0_data);\n    } else {\n        let variation_1_data = {\n            \"regular_price\": (badge==='nickel-chrome' && (record.[\"Prix neuf HT\"].toString() || '10000')) || '',\n            \"sale_price\": (badge==='nickel-chrome' && (record.[\"Prix HT\"].toString() && record.[\"Prix HT\"].toString())) || '',\n            \"manage_stock\": (badge==='nickel-chrome' && true) || false,\n            \"stock_quantity\": 1,\n            \"attributes\": [\n                    {\n                        \"id\": 21,\n                        \"name\": \"Etat\",\n                        \"option\": \"Nickel-Chrome\"\n                    }\n                ],\n        }\n        variations.push(variation_1_data);\n\n        let variation_2_data = {\n            \"regular_price\": (badge==='tres-bon-etat' && (record.[\"Prix neuf HT\"].toString() || '10000')) || '',\n            \"sale_price\": (badge==='tres-bon-etat' && (record.[\"Prix HT\"].toString() && record.[\"Prix HT\"].toString())) || '',\n            \"manage_stock\": (badge==='tres-bon-etat' && true) || false,\n            \"stock_quantity\": 1,\n            \"attributes\": [\n                    {\n                        \"id\": 21,\n                        \"name\": \"Etat\",\n                        \"option\": \"Très Bon Etat\"\n                    }\n                ],\n        }\n        variations.push(variation_2_data);\n\n        let variation_3_data = {\n            \"regular_price\": (badge==='etat-correct' && (record.[\"Prix neuf HT\"].toString() || '10000')) || '',\n            \"sale_price\": (badge==='etat-correct' && (record.[\"Prix HT\"].toString() && record.[\"Prix HT\"].toString())) || '',\n            \"manage_stock\": (badge==='etat-correct' && true) || false ,\n            \"stock_quantity\": 1,\n            \"attributes\": [\n                    {\n                        \"id\": 21,\n                        \"name\": \"Etat\",\n                        \"option\": \"Etat Correct\"\n                    }\n                ],\n        }\n        variations.push(variation_3_data);\n    }\n\n\n\n    // Add product\n    let response = await fetch('https://vesto.fr/wp-json/wc/v3/products?consumer_key='+ api_key +'&consumer_secret=' + secret_code, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n\n    let response_data = await response.json();\n    //console.log(response_data)\n    if (response_data.id) {\n        console.log(\"La machine a été mise en ligne en brouillon\");\n        let url = \"https://vesto.fr/wp-admin/post.php?post=\"+response_data.id+\"&action=edit\"\n        let clientUrl = \"https://vesto.fr/?post_type=product&p=\"+response_data.id\n        //table.updateRecordAsync(record, {\"Lien\": \"https://vesto.fr/?post_type=product&p=\"+response_data.id, })\n\n        if (badge === 'pas-bien-beau') {\n            let variation_response = await fetch('https://vesto.fr/wp-json/wc/v3/products/' + response_data.id + '/variations?consumer_key='+ api_key +'&consumer_secret=' + secret_code, {\n                method: 'POST',\n                body: JSON.stringify(variations[0]),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            variation_response = await variation_response.json();\n            false && console.log(variation_response)\n        } else {\n            let variation_1_response = await fetch('https://vesto.fr/wp-json/wc/v3/products/' + response_data.id + '/variations?consumer_key='+ api_key +'&consumer_secret=' + secret_code, {\n                method: 'POST',\n                body: JSON.stringify(variations[0]),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            variation_1_response = await variation_1_response.json();\n            false && console.log(variation_1_response)\n        \n            let variation_2_response = await fetch('https://vesto.fr/wp-json/wc/v3/products/' + response_data.id + '/variations?consumer_key='+ api_key +'&consumer_secret=' + secret_code, {\n                method: 'POST',\n                body: JSON.stringify(variations[1]),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            variation_2_response = await variation_2_response.json();\n            false && console.log(variation_2_response)\n        \n            let variation_3_response = await fetch('https://vesto.fr/wp-json/wc/v3/products/' + response_data.id + '/variations?consumer_key='+ api_key +'&consumer_secret=' + secret_code, {\n                method: 'POST',\n                body: JSON.stringify(variations[2]),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            variation_3_response = await variation_3_response.json();\n            false && console.log(variation_3_response)\n\n        }\n\n        notify('Ajouté en brouillon', 'info', {}, false);\n        return {url, clientUrl};\n        \n\n    } else {\n        console.log('error: ', response_data)\n        notify('Erreur dans les variations', 'warning', {}, false);\n    }\n\n\n}\n\nconst requestedProps = [\n    'Type',\n    'Marque',\n    'Modele',\n    'Prix HT',\n    'Prix neuf HT',\n    'Dimensions',\n    'Capacité',\n    'Alimentation',\n    'Sous-Catégorie',\n    'Etat'\n]\n\nconst validateValues = (props, notify) => {\n    let error = {}\n    let isError = false\n    props.setError('Obligatoire')\n    requestedProps.forEach(prop => {\n        if (!props.record[prop]) {\n            isError = true\n            error[prop] = 'Obligatoire'\n        }\n    })\n    if (props.reduction > -30) {\n        notify('Le prix est trop haut', 'warning', {}, false);\n        return false\n    }\n    if (!props.record['Avis Vesto']) {\n        notify('Il manque l\\'avis Vesto', 'warning', {}, false);\n        return false\n    }\n    props.setError(error)\n    console.log('in validate', isError, error)\n    return !isError\n    \n}\n\nconst replaceUrl = async (record, url, refresh) => {\n    let data = equipmentTransform(record)\n    await dataProvider.update('vesto_stock', {id: record['id'], data: {...data, 'Lien': url}})\n    refresh()\n}\n\nexport const AddOnlineShopButton = (props) => {\n    const notify = useNotify();\n    const refresh = useRefresh();\n    let [loading, setLoading] = useState(false)\n    \n    const handleClick = async (props) => {\n        console.log('in handle click')\n        setLoading(true)\n        let isValidated = validateValues(props, notify)\n        if (isValidated) {\n            \n            let {url, clientUrl} = await addOnlineShop(props.record, notify)\n            setLoading(false)\n            window.open(url, \"_blank\")\n            \n            //replace url\n            replaceUrl(props.record, clientUrl, refresh)\n            \n        } else {\n            notify('Manque d\\'informations', 'warning', {}, false);\n        }\n        refresh()\n    }\n    return(\n        <Button {...props} color=\"primary\" variant=\"contained\" disabled={!props.pristine} onClick={() => handleClick(props)} >{loading && <CircularProgress color=\"inherit\" size={20} />}  Ajouter au E-shop</Button>\n    )\n}","import {\n    Typography,\n    Card,\n    CardContent,\n    Grid,\n    Stepper,\n    Step,\n    StepLabel,\n    StepContent,\n} from '@material-ui/core';\nimport { useGetList, FormWithRedirect, SelectInput, SelectArrayInput, TextInput, SaveButton, useNotify, required, useRefresh, useCreate } from 'react-admin';\n\nimport { users } from '../users';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-final-form';\nimport { useState } from 'react';\n\nimport MessageIcon from '@material-ui/icons/Message';\n\nconst useStyles = makeStyles({\n    stepper: {\n        background: 'none',\n    },\n    card: {\n        marginLeft: '0.3em',\n        minWidth: '350px',\n        maxWidth: '350px',\n        height: 'fit-content',\n        overflow: 'scroll',\n        background: 'none',\n        maxHeight: '400px',\n        boxShadow: 'none',\n    },\n    addCard: {\n        marginLeft: '24px',\n        width: '350px',\n        height: 'fit-content',\n    },\n    title: {\n        marginLeft: '24px',\n        width: '350px',\n        marginBottom: '20px',\n    },\n    grid: {\n        height: 'fit-content',\n        maxWidth: '350px'\n    }\n});\n\n\nconst AddCommentFormContent = ({pristine, loading, handleSubmitWithRedirect, saving, setSaved, saved}) => {\n        const form = useForm()\n        const handleSubmit = event => {\n            handleSubmitWithRedirect(event)\n            //form.change('message', '')\n        }\n        if (saved) {\n            form.change('message', '')\n            setSaved(false)\n        }\n        return(\n                    <>\n                        <CardContent >\n                            <TextInput\n                                source=\"message\"\n                                fullWidth\n                                helperText=''\n                                variant='outlined'\n                                multiline\n                            />\n                            <SelectInput\n                                source='author'\n                                fullWidth\n                                label='Auteur'\n                                choices={users}\n                                validate={required()}\n                                optionText='name'\n                                helperText=''\n                                variant='outlined'\n                            />\n                            <SelectArrayInput\n                                source='tagued'\n                                fullWidth\n                                label='A taguer'\n                                choices={users}\n                                optionText='name'\n                                variant='outlined'\n                            />\n                            <SaveButton\n                                handleSubmitWithRedirect={\n                                    handleSubmit\n                                }\n                                pristine={pristine}\n                                saving={saving}\n                                disabled={loading}\n                                label='Commenter'\n                            />\n                        </CardContent>\n                    </>\n    )\n}\n\nconst AddCommentForm = (props) => {\n    const refresh = useRefresh()\n    const notify = useNotify()\n    //\n    const [create, { loading }] = useCreate('comments');\n    const [saved, setSaved] = useState(false);\n\n\n\n    const handleSubmit = async values => {\n        values.recordId = props.record.id\n        values.author = {id: values.author}\n        values.tagued = values.tagued && values.tagued.map(user => ({id: user}))\n        values.link = window.location.href\n        create(\n            { payload: { data: values } },\n            {\n                onSuccess: ({ data }) => {\n                    // Update the comment form to target the newly created post\n                    // Updating the ReferenceInput value will force it to reload the available posts\n                    refresh();\n                    setSaved(true)\n                    //form.change('message', '')\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                    console.log(error)\n                }\n            }\n        );\n    };\n\n    return(\n        <FormWithRedirect\n                resource=\"comments\"\n                save={handleSubmit}\n                render={({\n                    handleSubmitWithRedirect,\n                    pristine,\n                    saving\n                }) => (\n                    <AddCommentFormContent handleSubmitWithRedirect={handleSubmitWithRedirect} pristine={pristine} saving={saving} loading={loading} saved={saved} setSaved={setSaved}/>\n                )\n                }\n            />\n    )\n}\n\n\nexport const Comments = ({record}) => {\n    const classes = useStyles()\n\n    const { data, ids } = useGetList(\n        'comments',\n        { page: 1, perPage: 100 },\n        { field: 'date', order: 'asc' },\n        { recordId: record && record.id}\n    );\n\n    function updateScroll(){\n        if (document.getElementById(\"comments-card\")) {\n            var element = document.getElementById(\"comments-card\");\n            element.scrollTop = element.scrollHeight;\n        }\n        \n    }\n    useEffect(() => {\n        updateScroll()\n    })\n\n    return ( \n        <Grid container classes={{root: classes.grid}}>\n            <Typography variant='h6' className={classes.title}>Commentaires</Typography>\n        {ids.length > 0 && <Card classes={{ root: classes.card }} id='comments-card'>\n            <Stepper orientation=\"vertical\" classes={{ root: classes.stepper }}>\n                {ids.map(id => {\n                    return(\n                    <Step\n                        key={data[id].id}\n                        expanded\n                        active\n                        completed\n                    >\n                        <StepLabel\n                            StepIconComponent={MessageIcon}\n                        >\n                            {`${data[id].author.name} - ${new Date(data[id].date).toLocaleDateString('fr', {\n                                'day': 'numeric',\n                                'month': 'short',\n                                'hour': 'numeric',\n                                'minute': 'numeric',\n                            })}`}\n                        </StepLabel>\n                        <StepContent>\n                            <Comment\n                                comment={data[id].message}\n                                />\n                        </StepContent>\n                    </Step>)\n                })}\n            </Stepper>\n            \n        </Card>}\n        <Card classes={{root: classes.addCard}}>\n            <AddCommentForm record={record}/>\n        \n            </Card>\n        </Grid>\n    );\n};\n\nconst Comment = (props) => {\n    return (\n        <>\n            <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={''}\n            >\n                {props.comment}\n            </Typography>\n        </>\n    );\n};\n","\nimport React, { useState, useEffect } from 'react';\nimport { TextInput, CloneButton, SelectArrayInput, ReferenceArrayInput, AutocompleteArrayInput, SingleFieldList, ReferenceArrayField, ChipField, FunctionField, Edit, TextField, SelectInput, FileField, SimpleForm, NumberInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport customDataProvider from '../dataProvider';\nimport { Toolbar, DeleteButton, SaveButton, useNotify } from 'react-admin';\nimport { Button, Typography } from '@material-ui/core';\nimport { AddOnlineShopButton } from './addOnlineShop';\nimport { alimentationChoices, etatChoices, equipmentStatusChoices } from '../equipments/equipmentAttributesChoices';\nimport { equipmentTransform } from '../equipments/equipmentEdit';\nimport { Comments } from '../comments/comments';\nimport { users } from '../users';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '60%',\n        marginRight: '6%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        width: '80%',\n    },\n    red: {\n        fontWeight: 'bold',\n        color: 'red',\n    },\n    green: {\n        fontWeight: 'bold',\n        color: 'green',\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    list: {\n        display: 'flex',\n        listStyleType: 'none',\n    },\n    image: {\n        margin: '0.5rem',\n        maxHeight: '15rem',\n    },\n}));\n\n\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\nexport const validateValues = (props) => {\n    const requestedProps = [\n        'Type',\n        'Prix HT',\n        'Capacité',\n        'Alimentation',\n        'Sous-Catégorie',\n        'Dimensions',\n        'Etat'\n    ]\n    let error = {}\n    let isError = false\n    requestedProps.forEach(prop => {\n        if (!props[prop]) {\n            isError = true\n            error[prop] = 'Obligatoire'\n        }\n    })\n    return isError ? error : false\n}\n\nexport const CustomImageField = props => {\n    const {\n        className,\n        emptyText,\n        record,\n        source,\n        source1,\n        source2,\n        src,\n        title\n    } = props;\n    const sourceValue0 = record && record[source];\n    const sourceValue1 = record && record[source1];\n    const sourceValue2 = record && record[source2];\n    const sourceValue = sourceValue0 ? sourceValue0.concat(sourceValue1 ? sourceValue1 : []).concat(sourceValue2 ? sourceValue2 : []) : []\n    const classes = useStyles(props);\n    if (!sourceValue) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n\n            >\n                {emptyText}\n            </Typography>\n        ) : (\n            <div className={className}  />\n        );\n    }\n\n    if (Array.isArray(sourceValue)) {\n        return (\n            <div style={{'display': 'flex', 'flex-wrap': 'wrap'}}\n            >\n                {sourceValue.map((file, index) => {\n                    const fileTitleValue = file[title] || title;\n                    const srcValue = file[src];\n\n                    return (\n                        <div key={index}>\n                            <a href={srcValue} rel='noreferrer' target='_blank'>\n                            <img\n                                alt={fileTitleValue}\n                                title={fileTitleValue}\n                                src={srcValue}\n                                className={classes.image}\n                            />\n                            </a>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    const titleValue = record ? record[title] : title;\n\n    return (\n        <div className={className} >\n            <a href={record && record[source][src]} rel='noreferrer' target='_blank'>\n            <img\n                title={titleValue}\n                alt={titleValue}\n                src={record && record[source][src]}\n                className={classes.image}\n            />\n            </a>\n        </div>\n        \n    );\n};\n\nexport const EquipmentProcessingForm = props => {\n\n    const getCat = async () => {\n        const subCategories = await dataProvider.getList('categories', {'pagination': {}, 'sort': {'field': 'Catégorie', 'order': 'asc'}, 'filter': {}})\n        setSubCategories(subCategories)\n        return subCategories\n    }\n\n    const [subCategories, setSubCategories] = useState([])\n    useEffect(() => {\n        getCat()\n    }, [])\n\n    const classes = useStyles();\n    const [price, setPrice] = useState(props.record['Prix HT'])\n    const [initialPrice, setInitialPrice] = useState(props.record['Prix neuf HT'])\n\n    const onChangePrice = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const onChangeInitialPrice = (event) => {\n        setInitialPrice(event.target.value)\n    }\n\n    let reduction = Math.round((price - initialPrice)/initialPrice*100)\n    let id = props.record['id']\n\n    return(\n        <SimpleForm variant='outlined' warnWhenUnsavedChanges {...props} toolbar={<EquipmentProcessingActions {...props} setError={props.setError} reduction={reduction}/>}>\n            <TextInput source=\"Type\" fullWidth formClassName={classes.inline23Field} error={props.error && props.error['Type']} helperText={props.error && props.error['Type']}/>\n            <ReferenceArrayField source='Reconditionneur' reference='reconditionneurs' formClassName={classes.inline6Field} >\n                <SingleFieldList>\n                    <ChipField source='Nom'/>\n                </SingleFieldList>\n            </ReferenceArrayField>\n            <TextField source='Source' formClassName={classes.inline6Field} />\n            <SelectInput source='Statut' formClassName={classes.inlineField} choices={equipmentStatusChoices} optionText='name'/>\n            <SelectInput formClassName={classes.inlineHalfField} source=\"Owner name\" label='Owner' optionText='name' optionValue='name' choices={users} />\n\n\n\n            <Typography variant='h6'>Caractéristiques</Typography>\n            <TextInput source=\"Marque\" formClassName={classes.inlineField} error={props.error && props.error['Marque']} helperText={props.error && props.error['Marque']}/>\n            <TextInput source=\"Modele\" formClassName={classes.inlineField} error={props.error && props.error['Modele']} helperText={props.error && props.error['Modele']}/>\n            <TextInput source=\"Année\" formClassName={classes.inlineField}/>\n\n            <NumberInput label='Prix HT' source=\"Prix HT\" value={price} onChange={onChangePrice} formClassName={classes.inlineField} error={props.error && props.error['Prix HT']} helperText={props.error && props.error['Prix HT']} />\n            <NumberInput label='Prix neuf HT' source=\"Prix neuf HT\" value={initialPrice} onChange={onChangeInitialPrice} formClassName={classes.inlineField} error={props.error && props.error['Prix neuf HT']} helperText={props.error && props.error['Prix neuf HT']}/>\n            <FunctionField className={reduction <= -30 ? classes.green : classes.red} label='Pourcentage de réduction' render={record => price && initialPrice && `${reduction} %`} formClassName={classes.inlineField} />\n\n            \n            <TextInput source=\"Dimensions\" formClassName={classes.inlineField} error={props.error && props.error['Dimensions']} helperText={props.error && props.error['Dimensions']}/>\n            \n            <TextInput source=\"Capacité\" formClassName={classes.inlineField} error={props.error && props.error['Capacité']} helperText={props.error && props.error['Capacité']} />\n            <SelectArrayInput source=\"Alimentation\" choices={alimentationChoices} optionText='name' formClassName={classes.inlineField} error={props.error && props.error['Alimentation']} helperText={props.error && props.error['Alimentation']} />\n            <TextInput source=\"Puissance\" formClassName={classes.inlineField}/>\n            <TextInput source=\"Poids\" formClassName={classes.inlineField}/>\n            \n            <SelectInput formClassName={classes.inlineField} source=\"Etat\" choices={etatChoices} optionText='name' error={props.error && props.error['Etat']} helperText={props.error && props.error['Etat']}/>\n            <Typography variant='h6'>Catégories et Notes</Typography>\n            <ReferenceArrayInput source='Sous-Catégorie' reference='categories' formClassName={classes.inlineHalfField}>\n                <AutocompleteArrayInput setFilter={null} fullWidth choices={subCategories.data ? subCategories.data : []} optionText={(record) => (`${record && record['Nom']}  -  ${record && record['Catégorie']}`)} formClassName={classes.inlineField} meta={{'touched': props.error && props.error['Sous-Catégorie'], 'error': props.error && props.error['Sous-Catégorie'], 'submitError': props.error && props.error['Sous-Catégorie']}} helperText={props.error && props.error['Sous-Catégorie']}/>\n            </ReferenceArrayInput>\n            <Typography variant='h6'> </Typography>\n\n            <TextInput multiline fullWidth source=\"Avis Vesto\" formClassName={classes.inlineHalfField} />\n            <TextInput multiline fullWidth source=\"Notes\" formClassName={classes.inlineHalfField}/>\n    \n            <Typography variant='h6'>Documents</Typography>\n            {/*<ImageField source=\"Photo\" src='url' formClassName={classes.inlineHalfField}/>\n            <ImageField source=\"Photo plaque\" src='url' formClassName={classes.inlineHalfField}/>*/}\n            <CustomImageField addLabel={true} source=\"Photo\" source1=\"Photo 2 (TECH)\" source2=\"Photo 3 (TECH)\" src='url' formClassName={classes.inlineHalfField}/>\n            <CustomImageField addLabel={true} source=\"Photo plaque\" src='url' formClassName={classes.inlineHalfField}/>\n\n        \n            {/* <FileInput source=\"Fiche technique\" label='Fiche technique' multiple placeholder={<p>Ajouter un document</p>}>\n                <FileField source=\"url\" title='filename' target=\"_blank\" />\n            </FileInput> */}\n            <FileField source=\"Fiche technique\" src='url' title='filename' target=\"_blank\"  fullWidth/>\n            <Button href={`https://airtable.com/shrgizktKbhXC5z8J?prefill_Machine=${id}`} formClassName={classes.inline23Field} variant='contained' color='secondary' target='_blank' >Ajouter une Fiche Technique</Button>\n            \n        </SimpleForm>\n    )\n}\n\n\nconst EquipmentProcessingActions = (props) => {\n    \n    return(\n    <Toolbar {...props} classes={useStyles()}>\n        <SaveButton label='Enregistrer' redirect={false} disabled={props.pristine} />\n        <AddOnlineShopButton setError={props.setError} reduction={props.reduction} />\n        <Button color=\"primary\" variant=\"contained\" disabled={!props.record['Lien']} href={props.record['Lien']} target=\"_blank\">Voir annonce</Button>\n        <CloneButton label='Cloner' disabled={!props.pristine} record={props.record} basePath={props.basePath}/>\n        <DeleteButton label='Supprimer' />\n        {/* Add your custom actions */}\n    </Toolbar>)\n}\n\nexport const EquipmentProcessingEdit = props => {\n\n    const notify = useNotify();\n    //let previousState = props.record['Statut']\n    const [error, setError] = useState(false)\n\n    const validateAvailableData = (data) => {\n        if (data['Statut'] === 'Disponible' ) {\n            var validateError = validateValues(data)\n            if (validateError) {\n                setError(validateError)\n                data['Statut'] = 'A retraiter'\n                console.log('has error', error, validateError)\n                notify('Pas assez d\\'infos pour passer en disponible', 'warning', {}, false);\n            } else {\n                setError({})\n            }\n            return equipmentTransform(data);\n        }\n        return equipmentTransform(data)\n    }\n    \n    \n    return(\n    <Edit {...props} undoable={false} transform={validateAvailableData} aside={<Comments/>} >\n        <EquipmentProcessingForm error={error} setError={setError}/>\n    </Edit>\n    )};","import { useEditController, EditContextProvider, EditView, SingleFieldList, ReferenceArrayField, ChipField, DateField, UrlField, FunctionField, Edit, TextField, SelectInput, FileField, SimpleForm, useGetOne, useNotify } from 'react-admin';\nimport { IconButton, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Price, InitialPrice } from './equipmentList'\nimport { equipmentStatusChoices } from './equipmentAttributesChoices';\nimport { CustomImageField } from '../equipmentProcessing/equipmentProcessingEdit';\nimport { Comments } from '../comments/comments';\nimport React, { useState } from 'react';\nimport { users } from '../users';\n\n\nimport styled from 'styled-components';\n\nconst StyledImageField = styled(CustomImageField)`\n        width: 100%;\n        flex-wrap: wrap;\n        padding: 0;\n    `;\n\nconst StyledProperties = styled.span`\n`;\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '50%',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '60%',\n        marginRigth: '6%'\n    },\n    chip: {\n        width: 'auto',\n    },\n    chipMargin: {\n        margin: '10px 0',\n    },\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '1em',\n        fontWeight: 'bold',\n        minWidth: '400px',\n    },\n    edit: {\n        margin: '0 1em',\n    }\n}));\n\nexport const equipmentTransform = (data) => {\n    let newData = {...data}\n    delete newData['ID Bubble']\n    delete newData['Ajouter au E-shop']\n    delete newData['Annonce']\n    delete newData['Localisation']\n    delete newData['Nom du reconditionneur (TECH)']\n    delete newData['Nom client proposé (TECH)']\n    delete newData['Catégorie']\n    delete newData['Date de création']\n    delete newData['Marque - Modèle']\n    delete newData['id']\n    delete newData['Catégorie']\n    delete newData['Fiches techniques']\n    delete newData['Today']\n    newData['Fiche technique'] = newData['Fiche technique'] && newData['Fiche technique'].map(attachment => {\n        delete attachment.rawFile;\n        return(attachment)\n    })\n    if (newData['Owner name']) {\n        let id = ''\n        users.forEach(userChoice => {\n            if (userChoice.name === newData['Owner name']) {\n                id = userChoice.id\n            }\n        })\n        newData['Owner'] = [{'id': id}]\n    }\n    delete newData['Owner name']\n    return newData;\n};\n\n\nexport const EquipmentForm = props => {\n    const classes = useStyles();\n    let newProps = { ...props };\n    return (\n        <SimpleForm {...newProps} margin=\"normal\" redirect={false} warnWhenUnsavedChanges>\n            <TextField source=\"Marque - Modèle\" formClassName={classes.inline23Field} />\n            <FunctionField label=\"Prix HT\" formClassName={classes.inlineField} render={record => <><Price>{record['Prix HT']} €</Price>  {record['Prix neuf HT'] && <InitialPrice>{record['Prix neuf HT']} €</InitialPrice>}</>} />\n            <br/>\n            <SelectInput onChange={() => props.setChanged(true)} source=\"Statut\" choices={equipmentStatusChoices} optionText='id' />\n\n            <ChipField source=\"Etat\" className={classes.chip} formClassName={classes.inlineHalfField} />\n            <ChipField label='Reconditionneur' source=\"Nom du reconditionneur (TECH)\" className={classes.chip} formClassName={classes.inlineHalfField} />\n            <br/>\n            <StyledProperties>\n                <Typography><b>Dimensions:</b> {newProps.record['Dimensions']}</Typography>\n                <Typography><b>Capacité:</b> {newProps.record['Capacité']}</Typography>\n                <Typography><b>Puissance:</b>  {newProps.record['Puissance']}</Typography>\n                <Typography><b>Alimentation:</b>  {newProps.record['Alimentation']}</Typography>\n                <Typography><b>Localisation:</b>  {newProps.record['Localisation']}</Typography>\n                <Typography><b>Reconditionneur:</b>  {newProps.record['Nom du reconditionneur (TECH)']}</Typography>\n                <br />\n                <Typography><b>Notes:</b></Typography>\n                <Typography>{newProps.record['Notes']}</Typography>\n            </StyledProperties>\n            \n            <br/>\n            <StyledImageField addLabel={true} source=\"Photo\"source1=\"Photo 2 (TECH)\" source2=\"Photo 3 (TECH)\"  src='url' />\n            <StyledImageField addLabel={true} source=\"Photo plaque\" src='url' />\n            <FileField source=\"Fiche technique\" src=\"url\" title=\"Fiche technique\" target=\"_blank\" />\n\n            <UrlField target='_blank' source=\"Lien\" />\n\n            <ReferenceArrayField source='Proposée pour' reference='machines_desirees'>\n                <SingleFieldList >\n                    <ReferenceArrayField source='Client' reference='listes' >\n                        <SingleFieldList>\n                            <ChipField className={classes.chipMargin} source='Nom' />\n                        </SingleFieldList>\n                    </ ReferenceArrayField>\n                </SingleFieldList>\n            </ReferenceArrayField>\n\n\n            <DateField source=\"Date de création\" />\n        </SimpleForm>\n    )\n}\n\nconst StyledDiv = styled.div`\n    width: 900px;\n    max-width: 100vw;\n`;\n\n\nexport const CardEquipmentEdit = props => {\n    let response = useGetOne('vesto_stock', props.recordId)\n    const [changed, setChanged] = useState(false, [])\n    const classes = useStyles();\n    let newProps = {...props}\n    newProps.id = props.recordId\n    newProps.basePath = '/vesto_stock'\n    newProps.resource = 'vesto_stock'\n    newProps.transform = equipmentTransform\n    newProps.undoable = false\n    newProps.redirect = false\n    let controllerProps = useEditController(newProps)\n    const notify = useNotify()\n\n    const handleClose = () => {\n        if (changed) {\n            notify('Changements non sauvegardés', 'warning')\n        } else {\n            props.onCancel()\n        }\n    }\n\n    return (\n        <StyledDiv>\n            <div className={classes.title}>\n                <Typography variant=\"h6\">\n                    {response && response.data && response.data['Type']}\n                </Typography>\n                <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            {response && response.data && \n            <EditContextProvider value={controllerProps} >\n                <EditView {...newProps} {...controllerProps} className={classes.edit} aside={<Comments/>} >\n                    <EquipmentForm setChanged={setChanged}/>\n                </EditView>\n            </EditContextProvider>\n            \n            }\n        </StyledDiv>\n    )\n};\n\nexport const EquipmentEdit = props => {\n    const classes = useStyles();\n    const [changed, setChanged] = useState(false)\n    const notify = useNotify()\n    let response = useGetOne('vesto_stock', props.recordId)\n\n    const handleClose = () => {\n        if (changed) {\n            notify('Changements non sauvegardés', 'warning')\n        } else {\n            props.onCancel()\n        }\n    }\n\n    return (\n        <StyledDiv>\n            <div className={classes.title}>\n                <Typography variant=\"h6\">\n                    {response.data && response.data['Type']}\n                </Typography>\n                <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <Edit {...props} className={classes.edit} aside={<Comments/>} undoable={false} transform={equipmentTransform}>\n                <EquipmentForm setChanged={setChanged}/>\n            </Edit>\n        </StyledDiv>\n    )\n};","import React, { useState, useCallback } from 'react';\nimport { NumberField, useGetList, FilterLiveSearch, FilterList, FilterListItem, ListBase, TextField, Pagination } from 'react-admin';\nimport { GridList, GridListTile, Box, GridListTileBar, Card, CardContent, Chip, Drawer } from '@material-ui/core';\nimport {\n    useListContext,\n    linkToRecord,\n} from 'react-admin';\nimport { Link } from 'react-router-dom';\nimport { Route, useHistory} from 'react-router';\nimport { EquipmentEdit } from './equipmentEdit'\n\n\nimport { withStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\n\nconst Category= styled.div`\n    margin: 2px 9px;\n    font-weight: bold;\n    `;\n\nconst EquipmentImage= styled.div`\n    height: 100%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    text-align: end;\n    background-position: center;\n    .MuiChip-root {\n        margin: 10px;\n        height: 25px;\n        color: white;\n        font-weight: bold;\n    }\n    .blue {\n        background-color: steelblue;\n    }\n    .green {\n        background-color: mediumseagreen;\n    }\n    .violet {\n        background-color: mediumslateblue;\n    }\n    .pink {\n        background-color: violet;\n    }\n    .red {\n        background-color: tomato;\n    }\n    .grey {\n        background-color: grey;\n    }\n    `;\n\nexport const colorsForRefurbisher = {\n    'L2G': 'blue',\n    'Infrico': 'blue',\n    'Meiko': 'blue',\n    'DM Equipements': 'violet',\n    'Capek Solutions': 'green',\n    'FCC': 'red',\n    'Abdel/Samy': 'pink',\n    'Maresca': 'grey',\n}\n\nconst StyledGridListTile = withStyles({\n    root: {\n        'text-decoration': 'none',\n    },\n    })(GridListTile);\n\nexport const Price = styled.span`\n    color: #F9BC60;\n    font-weight: bold!important;\n    font-size: 16px;\n    .MuiTypography-body2 {\n        font-weight: bold!important;\n        font-size: 16px;\n    }\n    `;\n\n\nexport const InitialPrice = styled.span`\n    color: grey;\n    font-size: 16px;\n    text-decoration: line-through;\n    `;\n\nexport const EquipmentFilter = (props) => {\n    const { data, ids } = useGetList(\n        'categories',\n        { page: 1, perPage: 100 },\n        { field: 'Catégorie', order: 'asc' },\n        {}\n    );\n    const categories = ['Froid', 'Chaud', 'Laverie', 'Préparation alimentaire', 'Boulangerie-Pâtisserie', 'Inox']\n    return (\n        <Card >\n            <CardContent>\n                <FilterLiveSearch source='Marque' label='Marque' />\n                <FilterList\n                    label=\"Catégories\"\n                >\n                    {categories.map(category => (\n                        <>\n                            <Category>{category}</Category>\n                            {ids &&\n                                data &&\n                                ids.map((id: any) => (\n                                    data[id]['Catégorie'] === category &&\n                                    <FilterListItem\n                                        label={data[id]['Nom']}\n                                        key={data[id].id}\n                                        value={{ 'Sous-Catégorie': [data[id]['Nom']] }}\n                                    />\n                                ))}\n                        </>\n                    )\n                    )}\n                </FilterList>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst LoadedEquipmentList = props => {\n    const { ids, data, basePath } = useListContext();\n    const [selectedId, setSelectedId] = useState(props.selectedId)\n    const handleClickWithId = (id) => {\n        setSelectedId(id)\n        return(props.handleClick(id))\n    }\n    return (\n        <Box width={'100%'}>\n            <GridList cols={4} cellHeight={300} >\n                {ids.map(id => (\n                    <Equipment id={id} data={data} basePath={basePath} selected={selectedId === id} handleClickWithId={handleClickWithId} {...props} />\n                ))}\n            </GridList>\n            <Pagination />\n        </Box>\n\n    )\n\n}\n\nconst Equipment = props => {\n    const { id, data, basePath, selected, handleClickWithId } = props\n    const gridListProps = (props.variant === 'select') ? {onClick: () => handleClickWithId(id)} : {component: Link, key: id, to: linkToRecord(basePath, id)}\n    const backgroundStyle = data[id]['Photo'] ? {\"background-image\": `url(\"${data[id]['Photo'][0]['thumbnails']['large']['url']}\"`} : {}\n    const borderStyle = selected ? {\"border\": \"6px solid orange\", 'border-radius': '4px'} : {}\n    \n    return(\n        <StyledGridListTile selected={selected} {...props} {...gridListProps} >\n            <EquipmentImage key={id} style={Object.assign({}, backgroundStyle, borderStyle)}>\n                <Chip className={colorsForRefurbisher[data[id]['Nom du reconditionneur (TECH)']]} label={data[id]['Nom du reconditionneur (TECH)']} />\n            </EquipmentImage>\n            <GridListTileBar\n                title={data[id]['Type']}\n                subtitle={\n                    <span>\n                        <Price><NumberField\n                            source=\"Prix HT\"\n                            record={data[id]}\n                            options={{\n                                style: 'currency',\n                                currency: 'EUR',\n                            }}\n                        /></Price> <span> - </span>\n                        <TextField\n                            source=\"Marque\"\n                            record={data[id]}\n                        /> <span> - </span>\n                        <TextField\n                            source=\"Modele\"\n                            record={data[id]}\n                        /> \n                    </span>\n                }\n            />\n        </StyledGridListTile>\n    )\n    \n}\n\nexport const EquipmentList = (props) => {\n    const history = useHistory();\n    const handleClose = useCallback(() => {\n        history.push('/vesto_stock');\n    }, [history]);\n    \n    return(\n        <React.Fragment>\n            <ListBase {...props} perPage={50} sort={{ field: 'Date de création', order: 'DESC' }} filter={{ view: \"SALES: Machines disponibles\" }} >\n                <Box m={1} display='flex'>\n                    <EquipmentFilter />\n                    <LoadedEquipmentList {...props}/>\n                </Box>\n            </ListBase>\n            <Route\n                path=\"/vesto_stock/:id\"\n                render={({match}) => {\n                    const isMatch = match && match.params && match.params.id !== \"create\";\n                    \n\n                    return (\n                    <Drawer open={isMatch} anchor=\"right\" onClose={handleClose}>\n                        {isMatch ? (\n                        <EquipmentEdit\n                            recordId={match.params.id}\n                            id={match.params.id}\n                            onCancel={handleClose}\n                            {...props}\n                        />\n                        ) : null}\n                    </Drawer>\n                    );\n                }}\n            />\n        </React.Fragment>\n    )};","import { Datagrid, TextField, ReferenceField, DateField, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, ExportButton } from 'react-admin';\nimport { useCallback } from 'react';\nimport { Card, CardContent, Grid, Tabs, Tab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '500px',\n    },\n}))\n\nexport const longTermStatusChoices = [\n    {id: 'Long terme: à recontacter'},\n    {id: 'Long terme: en veille'},\n]\n\nexport const shortTermStatusChoices = [\n    {id: 'Call de préparation à faire'},\n    {id: 'Date install à planifier'},\n    {id: 'Date install planifiée'},\n    {id: 'Livré, en attente de mise en service'},\n    {id: 'Terminé'}\n]\n\nconst tabs = [\n    longTermStatusChoices, shortTermStatusChoices\n]\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut intervention': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={4}>\n                {tabs.map(choices => (\n                    <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut intervention']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {choices.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.id}\n                            value={choice.id}\n                            classes={classes}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid>\n                 ))}\n            </Grid>\n            <Grid item xs={8}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <ReferenceField source=\"Client\" reference=\"clients\">\n                                    <TextField source=\"Client\" />\n                                </ReferenceField>\n                                <TextField source=\"Adresse installation\" />\n                                <TextField source=\"Période installation souhaitée\" />\n                                <DateField source=\"Debut installation\"/>\n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport const TabbedOperationsList = props => {\n    return(\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut intervention': 'Call de préparation à faire' }}\n        perPage={10}\n        \n    >\n        <TopToolbar >\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>)\n};","import { Datagrid, TextField, ReferenceField, DateField, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, ExportButton } from 'react-admin';\nimport { useCallback } from 'react';\nimport { Card, CardContent, Grid, Tabs, Tab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '500px',\n    },\n}))\n\nexport const SAVStatusChoices = [\n    {id: 'SAV: Informations client nécessaire'},\n    {id: 'SAV: Client à recontacter'},\n    {id: 'SAV: En attente de pièce'},\n    {id: 'SAV: Date de SAV à planifier'},\n    {id: 'SAV: Date de SAV planifiée'},\n    {id: 'SAV: Résolu'},\n]\n\nconst tabs = [\n    SAVStatusChoices\n]\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut intervention': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={4}>\n                {tabs.map(choices => (\n                    <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut intervention']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {choices.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.id}\n                            value={choice.id}\n                            classes={classes}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid>\n                 ))}\n            </Grid>\n            <Grid item xs={8}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <ReferenceField source=\"Client\" reference=\"clients\">\n                                    <TextField source=\"Client\" />\n                                </ReferenceField>\n                                <TextField source=\"Adresse installation\" />\n                                <DateField source=\"Debut prochaine intervention\"/>\n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport const TabbedSAVList = props => {\n    return(\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut intervention': 'Call de préparation à faire' }}\n        perPage={10}\n        \n    >\n        <TopToolbar >\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>)\n};","import React from 'react';\nimport { TextField, useNotify, DateTimeInput, Edit, TextInput, ReferenceField, SimpleForm, SelectInput, ReferenceArrayField } from 'react-admin';\nimport { longTermStatusChoices, shortTermStatusChoices } from './operationsList';\nimport { SAVStatusChoices } from './savList';\nimport { EquipmentCards } from '../equipments/equipmentCards';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ClientDetails } from '../lists/listEdit';\nimport {  Typography } from '@material-ui/core';\nimport { users } from '../users';\n\n\nimport { Comments } from '../comments/comments';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '66%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        maxWidth: '80%',\n    }\n}))\n\n\nconst statutsChoices = longTermStatusChoices.concat(shortTermStatusChoices).concat(SAVStatusChoices)\n\nexport const listTransform = (data) => {\n    let newData = {...data}\n    delete newData['Numéro de Liste']\n    delete newData['Nom par défaut']\n    delete newData['Date de création']\n    delete newData['Nb machines']\n    delete newData['Fiche hubspot']\n    delete newData['Créer devis']\n    delete newData['Créer proforma']\n    delete newData['id']\n    delete newData['Entreprise']\n    delete newData['Prénom client (auto)']\n    delete newData['Nom client (auto)']\n    delete newData['Lien hubspot']\n    delete newData['Machines devis']\n    delete newData['Reconditionneurs impliqués']\n    delete newData['Total services']\n    delete newData['Total machines']\n    delete newData['Total']\n    delete newData['Adresse client']\n    if (newData['Owner name']) {\n        let id = ''\n        users.forEach(userChoice => {\n            if (userChoice.name === newData['Owner name']) {\n                id = userChoice.id\n            }\n        })\n        newData['Owner'] = [{'id': id}]\n    }\n    delete newData['Owner name']\n    delete newData['Temps depuis installation (mois)']\n    \n    return newData;\n};\n\nexport const OperationEdit = props => {\n    const classes = useStyles();\n    const notify = useNotify();\n\n    const validateData = (data) => {\n        if (data['Statut intervention'] === 'Date install planifiée' ) {\n            if (!(data['Debut installation'] && data['Fin installation'])) {\n                data['Statut intervention'] = 'Date install à planifier';\n                notify('Les dates d\\'installation ne sont pas renseignées', 'warning', {}, false);\n            }\n        }\n        else if (data['Statut intervention'] === 'Terminé' ) {\n            if (!data['CR pour les Sales']) {\n                data['Statut intervention'] = 'Date install planifiée';\n                notify('Il manque le CR pour les sales', 'warning', {}, false);\n            }\n        }\n        return listTransform(data)\n    }\n    return(\n    <Edit {...props} transform={validateData} undoable={false} aside={<Comments/>}>\n        <SimpleForm variant='outlined' warnWhenUnsavedChanges redirect={false} >\n            <TextField source=\"Nom\" formClassName={classes.inlineField} />\n            <SelectInput optionText='id' formClassName={classes.inlineField} choices={statutsChoices} source=\"Statut intervention\" />\n            <ReferenceField source=\"Client\" reference=\"clients\" formClassName={classes.inlineField} >\n                <ClientDetails />\n            </ReferenceField>\n            \n            <TextInput multiline fullWidth label='Notes installs / SAV' source=\"Notes installs / SAV\" formClassName={classes.fullWidth}/>\n            <br/>\n            <Typography variant='h6'>Informations install</Typography><br/>\n            <TextInput source=\"Adresse installation\" formClassName={classes.fullWidth} fullWidth/>\n            <TextInput source=\"Acces\" fullWidth formClassName={classes.inlineHalfField}/>\n            <TextInput source=\"Souhait de reprise\" formClassName={classes.inlineHalfField} fullWidth/>\n            <TextInput source=\"Période installation souhaitée\" formClassName={classes.inlineField}/>\n            <TextInput source=\"Urgence et indisponibilités\" formClassName={classes.inline23Field}/>\n\n            <DateTimeInput source=\"Debut installation\" formClassName={classes.inlineField}/>\n            <DateTimeInput source=\"Fin installation\" formClassName={classes.inlineField}/>\n            <TextInput multiline fullWidth label='CR pour les sales' source='CR pour les Sales' formClassName={classes.fullWidth}/>\n        {/*<NumberInput source='Frais supplémentaires' formClassName={classes.inlineField}/>\n            <TextInput source='Notes frais' label='Notes'  formClassName={classes.inline23Field}/>*/}\n            <br/>\n            <Typography variant='h6'>Machines</Typography><br/>\n            <ReferenceArrayField source=\"Machines devis\" reference=\"vesto_stock\">\n                <EquipmentCards editable={false} />\n            </ReferenceArrayField>\n        </SimpleForm>\n    </Edit>\n)};","\nimport React, { useState } from 'react';\nimport {\n    Button,\n    SaveButton,\n    useRefresh\n} from 'react-admin';\nimport customDataProvider from '../dataProvider';\n\nimport IconContentAdd from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { EquipmentList } from '../equipments/equipmentList';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport { listTransform } from '../operations/operationEdit';\n\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\n\nexport const EquipmentQuickAddButton = (props) => {\n    const [showDialog, setShowDialog] = useState(false);\n    const [equipmentId, setEquipmentId] = useState();\n    const refresh = useRefresh();\n\n    const handleClick = () => {\n        setShowDialog(true);\n    };\n\n    const handleCloseClick = () => {\n        setShowDialog(false);\n        setEquipmentId('');\n    };\n\n    const handleSelectEquiment = id => {\n        console.log('in handle select equipment', id)\n        setEquipmentId(id)\n    }\n\n    const handleSubmit = async () => {\n        console.log('var', props.var, props)\n        if (props.var === 'proforma') {\n            const params = { id: props.record.id, data: listTransform({...props.record, 'Machines proforma': props.record['Machines proforma'] ? props.record['Machines proforma'].concat([equipmentId]) : [equipmentId] })}\n            await dataProvider.update('listes', params)\n        } else {\n            const params = { id: props.record.id, data: {'Détails': props.record['Détails'], 'Type de machine': props.record['Type de machine'], 'Client': props.record['Client'], 'Mach. possibles': props.record['Mach. possibles'] ? props.record['Mach. possibles'].concat([equipmentId]): [equipmentId]}}\n            await dataProvider.update('machines_desirees', params)\n        }\n        setShowDialog(false);\n        setEquipmentId('');\n        refresh();\n    }\n    return (\n        <>\n            <Button onClick={handleClick} >\n                <IconContentAdd />\n            </Button>\n            <Dialog\n                fullWidth\n                maxWidth='xl'\n                open={showDialog}\n                onClose={handleCloseClick}\n            >\n                <DialogTitle>Ajouter une machine possible</DialogTitle>\n                    <DialogContent>\n                        <EquipmentList\n                            basePath='/vesto_stock'\n                            resource='vesto_stock'\n                            variant='select'\n                            selectedId=''\n                            handleClick={handleSelectEquiment}/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            label=\"ra.action.cancel\"\n                            onClick={handleCloseClick}\n                            //disabled={loading}\n                        >\n                            <IconCancel />\n                        </Button>\n                        <SaveButton\n                            handleSubmitWithRedirect={\n                                handleSubmit\n                            }\n                            //pristine={pristine}\n                            //saving={saving}\n                            disabled={!equipmentId}\n                        />\n                   </DialogActions>\n            </Dialog>\n        </>\n    );\n\n}","\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport customDataProvider from '../dataProvider';\nimport { IconButton, ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport { useRefresh } from 'react-admin';\nimport { red } from '@material-ui/core/colors';\nimport { listTransform } from '../operations/operationEdit';\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: red,\n    },\n});\n  \n\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\n\n\nexport const EquipmentQuickDeleteButton = (props) => {\n    const refresh = useRefresh();\n\n    const equipmentQuickDelete = async () => {\n        props.setDeleting(true)\n        if (props.var === 'proforma') {\n            props.record['Machines proforma'] && props.record['Machines proforma'].splice(props.record['Machines proforma'].indexOf(props.equipmentId))\n            const params = { id: props.record.id, data: listTransform({...props.record, 'Machines proforma': props.record['Machines proforma'] })}\n            await dataProvider.update('listes', params)\n        } else {\n            props.record['Mach. possibles'] && props.record['Mach. possibles'].splice(props.record['Mach. possibles'].indexOf(props.equipmentId))\n            const params = { id: props.record.id, data: {'Détails': props.record['Détails'], 'Type de machine': props.record['Type de machine'], 'Client': props.record['Client'], 'Mach. possibles': props.record['Mach. possibles'] }}\n            await dataProvider.update('machines_desirees', params)\n        }\n        refresh();\n        props.setDeleting(false)\n    }\n\n    return (<ThemeProvider theme={theme}><IconButton edge='start' size='medium' aria-label=\"delete\" onClick={() => equipmentQuickDelete(props)} ><DeleteIcon /></IconButton></ThemeProvider>)\n}","import React, { useState } from 'react';\n\nimport { Card, CardContent, Typography, Grid, Chip, Drawer } from '@material-ui/core';\n\nimport { Price } from './equipmentList'\n\nimport { EquipmentQuickAddButton } from '../lists/EquipmentQuickAddButton'\nimport { EquipmentQuickDeleteButton } from '../lists/EquipmentQuickDeleteButton'\n\nimport { CardEquipmentEdit } from './equipmentEdit'\nimport { colorsForRefurbisher } from './equipmentList';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        width: '30%',\n        marginRight: '3%',\n        minWidth: 'fit-content',\n    },\n}))\n\nconst EquipmentDiv = styled.div`\n    width: 400px;\n    `;\n\nconst StyledCard = styled(Card)`\n    :hover {\n        cursor: pointer;\n    }\n    `;\n\nconst StyledCardContent = styled(CardContent)`\n    :last-child {\n        padding-bottom: 16px;\n    }\n    .blue {\n        background-color: #4682b496;\n    }\n    .green {\n        background-color: #3cb37170;\n    }\n    .violet {\n        background-color: #7b68ee80;\n    }\n    .pink {\n        background-color: #ee82ee80;\n    }\n    .red {\n        background-color: #ff634770;\n    }\n    .grey {\n        background-color: grey;\n    }\n    `;\n\nconst colorsForStatus = {\n    'En attente de relecture': 'blue',\n    'Réservé': 'violet',\n    'Sur E-shop': 'green',\n    'Disponible': 'green',\n    'Vendu hors Vesto': 'red',\n    'Vendu par Vesto': 'red',\n    'Bloqué': 'pink',\n}\n\nexport const EquipmentCards = (props) => {\n    const [open, setOpen] = useState(false)\n    const [openId, setOpenId] = useState()\n    const [deleting, setDeleting] = useState(false)\n    let editable = props.editable;\n    const classes = useStyles()\n    return (\n        <>\n            <EquipmentDiv><Grid container spacing={1} display=\"flex\" flexDirection=\"column\" justify='flex-start' >\n                {props.ids.map(id => (\n                    <>\n                        <Grid item xs={12}>\n                            <StyledCard onClick={() => { setOpen(true); setOpenId(id) }}>\n                                <StyledCardContent>\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={8}>\n                                            <span style={{ 'font-weight': 'bold' }}>{props.data[id] && props.data[id]['Type']}</span>\n                                            <Typography variant='body2'>{props.data[id] && props.data[id]['Marque']} - {props.data[id] && props.data[id]['Modele']}</Typography>\n                                            <Typography><Price>{props.data[id] && props.data[id]['Prix HT']} €</Price></Typography>\n                                            <Chip className={`${props.data[id] && props.data[id]['Nom du reconditionneur (TECH)'] && colorsForRefurbisher[props.data[id]['Nom du reconditionneur (TECH)'][0]]} ${classes.inlineField}`} label={props.data[id] && props.data[id]['Nom du reconditionneur (TECH)'] && props.data[id]['Nom du reconditionneur (TECH)'][0]} />\n                                            <Chip className={`${props.data[id] && colorsForStatus[props.data[id]['Statut']]} ${classes.inlineField}`} label={props.data[id] && props.data[id]['Statut']} />\n                                            {editable && <EquipmentQuickDeleteButton var={props.var} setDeleting={setDeleting} equipmentId={id} record={props.record} />}\n                                        </Grid>\n                                        <Grid container item xs={4}>\n                                            <div style={{ 'overflow': 'hidden', 'max-height': '130px' }}><img width='100%' alt={id} src={props.data[id] && props.data[id]['Photo'] && props.data[id]['Photo'][0]['thumbnails']['large']['url']} /></div>\n                                        </Grid>\n                                    </Grid>\n                                </StyledCardContent>\n                            </StyledCard>\n                        </Grid>\n                        <Drawer open={open && (openId === id) && !deleting} anchor=\"right\" >\n                            {id && <CardEquipmentEdit\n                                recordId={id}\n                                onCancel={() => setOpen(false)}\n                            />}\n                        </Drawer>\n                    </>\n                ))}\n                {editable && <EquipmentQuickAddButton var={props.var} record={props.record} />}\n            </Grid></EquipmentDiv>\n\n        </>\n    )\n}","import { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport { Edit, BooleanInput, SimpleForm, TextInput, Create, Datagrid, RichTextField, ReferenceArrayField, DeleteButton } from 'react-admin';\nimport { Typography, Chip } from '@material-ui/core';\n\nimport { EquipmentCards } from '../equipments/equipmentCards';\n\nimport styled from 'styled-components';\n\n\nconst EquipmentDiv= styled.div`\n    min-width: 300px;\n    max-width: 400px;\n    margin: 10px;\n    .green {\n        background-color: #3cb37170;\n    }\n    .red {\n        background-color: #ff634770;\n    }\n    `;\n\nconst StyledCreate = withStyles({\n    root: {\n        width: '100%',\n    },\n  })(Create);\n\n\n\nconst wantedEquipmentTransform = (data) => {\n    let newData = {\n        'Type de machine': data['Type de machine'],\n        'Détails' : data['Détails'],\n        'Client' : data['Client'],\n        'Mach. possibles': data['Mach. possibles'],\n        'A rechercher': data['A rechercher']\n    }\n    return newData;\n}\n\nconst wantedEquipmentCreateTransform = (data) => {\n    let newData = {\n        'Type de machine': data['Type de machine'],\n        'Détails' : data['Détails'] || '<br/> ',\n        'Client' : [data['id']],\n        'A rechercher' : data['A rechercher'],\n    }\n    return newData;\n}\n\n\nconst EquipmentDataGrid = (props) => {\n    return(\n        <ReferenceArrayField\n            label=\"Machines possibles\"\n            source=\"Mach. possibles\" //quel est le nom du champ\n            reference=\"vesto_stock\" // quel est le nom de la table / resource\n            {...props}\n        >\n            <EquipmentCards {...props} editable={true} />\n        </ReferenceArrayField>\n    )\n}\n\nexport const WantedEquipmentTitle = props => {\n        return(\n            <EquipmentDiv>\n                <Typography variant='h6'>{props.record && props.record['Type de machine']}</Typography>\n                <RichTextField source='Détails'{...props}/>\n\n                <Chip className={props.record && (props.record['A rechercher'] ? 'green' : 'red')} label={props.record && (props.record['A rechercher'] ? 'Recherché' : 'Non recherché')}/>\n            </EquipmentDiv>\n        )\n}\n\nexport const WantedEquipmentList = (props) => {\n\n    return(\n        <>\n    <Datagrid expand={WantedEquipmentEdit} {...props}>\n        <WantedEquipmentTitle label='Machines désirées'/>\n        <EquipmentDataGrid label='Machines proposées' />\n        <DeleteButton redirect={false} label='' />\n    </Datagrid>\n    </>)\n}\n\nexport const WantedEquipmentEdit = (props) => (\n        <Edit transform={wantedEquipmentTransform} {...props}>\n            <SimpleForm variant='outlined' redirect=\"\" {...props}>\n                <TextInput fullWidth source=\"Type de machine\"/>\n                <TextInput fullWidth multiline source=\"Détails\"/>\n                <BooleanInput source='A rechercher'/>\n            </SimpleForm>\n        </Edit>\n)\n\nexport const WantedEquipmentCreate = (props) => {\n    return(\n        <StyledCreate transform={wantedEquipmentCreateTransform} {...props} resource='machines_desirees'>\n            <SimpleForm {...props} redirect={false} title=' ' variant='outlined'>\n                <TextInput fullWidth source=\"Type de machine\"/>\n                <TextInput fullWidth multiline source=\"Détails\"/>\n                <BooleanInput source='A rechercher'/>\n            </SimpleForm>\n        </StyledCreate>  \n    )\n\n}","\nimport { useGetOne, useGetMany, useUpdateMany, useNotify, useRefresh } from 'react-admin';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useState } from 'react';\n\n\n\nexport const CreateQuoteButton = ({ documentRecord, documentVariant = 'devis', deposit=0 }) => {\n    const [loading, setLoading] = useState(false)\n    const notify = useNotify();\n    const refresh = useRefresh();\n    const clientId = documentRecord && documentRecord[\"Client\"] && documentRecord[\"Client\"][0]\n    console.log('record devis', documentRecord)\n\n\n    let client = useGetOne('clients', clientId)\n\n    let productToFetch = documentVariant === 'proforma' ? (documentRecord[\"Machines proforma\"] || []) : (documentRecord[\"Machines devis\"] || [])\n    let products = useGetMany('vesto_stock', productToFetch)\n    let lrms = useGetMany('vesto_stock', documentRecord[\"Livraison\"] || [])\n\n    const [updateMany] = useUpdateMany('vesto_stock')\n\n\n    const createQuote = (documentRecord) => {\n        console.log('in clic', client, products, lrms, documentVariant)\n        notify('Pensez bien à enregistrer les informations avant de créer le document', 'info', {}, false);\n\n\n        let productsData = products.data || []\n        let lrmsData = lrms.data || []\n        productsData = (!documentVariant === 'proforma') ? productsData.concat(lrmsData) : productsData\n\n\n        //var productsList = []\n        var numberList = ''\n        var typeList = ''\n        var modelList = ''\n        var alimentationList = ''\n        var priceList = ''\n        var dimensionList = ''\n\n        //get info from product\n        let productsIds = []\n        console.log('productsData', productsData)\n        productsData.forEach(product => {\n\n            // If product is already booked, print a warning message\n            if (product['Statut'].includes(\"Reservé\") && documentVariant==='devis') {\n                notify('ATTENTION: La machine ' + product['Type'] + ' ' + product['Marque'] + ' est déjà réservée. Elle a quand même été ajoutée au devis.', 'warning')\n            }\n            if (product['Statut'].includes(\"Vendu\") || product['Statut'].includes(\"Livraison\")) {\n                // If product is already sold, print a warning message\n                if (product['Statut'].includes(\"Vendu\") && documentVariant==='devis') {\n                    notify('ATTENTION: La machine ' + product['Type'] + ' ' + product['Marque'] + ' est vendue. Elle ne peut pas être ajoutée au devis.', 'warning')\n\n                }\n            }\n            if (!product['Statut'].includes(\"Vendu\")) {\n                //productsList.push({ 'number': '1', 'type': product['Type'], 'model': product['Marque'] + ' - ' + product['Modele'], 'price': product['Prix HT'] });\n                numberList += '1,';\n                typeList += product['Type'] + ',';\n                modelList += ((product['Marque'] || '') + (product['Marque']  && product['Modele'] ? ' - ' : '') + (product['Modele'] || '')) + ',';\n                alimentationList += (product['Alimentation'] ? (product['Alimentation'][0] || '') : '') + ',';\n                dimensionList += (product['Dimensions'] || '') + ',';\n                priceList += product['Prix HT'] + ',';\n                if (!product['Statut'].includes(\"Livraison\")) {\n                    productsIds.push(product.id)\n                }\n            }\n\n            //book equiment if it's a quote\n            (documentVariant === 'devis') && updateMany({ payload: { ids: productsIds, data: { 'Statut': 'Réservé' } } })\n\n        }\n        )\n\nconsole.log('client', client, client.data)\n\n\nvar quoteData = {\n    'company': client.data[\"Entreprise\"] || '',\n    'city': client.data[\"Adresse\"] || '',\n    'firstname': client.data[\"Prénom\"] || '',\n    'lastname': client.data[\"Nom\"] || '',\n    'tel': client.data[\"Téléphone\"] || '',\n    'mail': client.data[\"email\"] || '',\n    'siret': client.data[\"SIRET\"] || '',\n    'numberList': numberList,\n    'typeList': typeList,\n    'modelList': modelList,\n    'alimentationList': alimentationList,\n    'dimensionList': dimensionList,\n    'priceList': priceList,\n    'id': documentRecord['Numéro de Liste'],\n    'deposit': deposit,\n}\n\nvar url = documentVariant ==='devis'\n    ? 'https://script.google.com/a/vesto.fr/macros/s/AKfycbzbSt4Qnx_ZVxJAZWyJbWVP1k7oH4CPu_iLCezKFrHUadmVHcj4GI1awQClqhfCLT8l/exec?'\n    : document === 'proforma'\n        ? 'https://script.google.com/a/vesto.fr/macros/s/AKfycbzwanhW4zjnBqO-cOnJLOekajJnyZZWaimxpxHbmcQkEW9xzxB0AZA2i23dx_VFpPKB/exec?'\n        : 'https://script.google.com/a/vesto.fr/macros/s/AKfycbyh9Rdm8IO9iXXI0pVfybK1RFGUjd79sawvUzHJAUTPwCaLfii1hEFdaKV_Z1ekjfwwKg/exec?'\n\n\nfor (var j = 0; j < Object.keys(quoteData).length; j++) {\n    url += Object.keys(quoteData)[j] + '=' + encodeURI(quoteData[Object.keys(quoteData)[j]]) + '&'\n}\n\ndocumentVariant === 'devis' && console.log('Les machines ont été mises en statut Réservé')\n//output.markdown(url)\nconsole.log(url)\nreturn (url)\n    }\n\nconst handleClick = async (record) => {\n    console.log('in handle click')\n    setLoading(true)\n    if (true) {\n\n        let url = await createQuote(record)\n        setLoading(false)\n        var ww = window.open(url, \"_blank\")\n        window.close(ww)\n\n\n    } else {\n        notify('Manque d\\'informations', 'warning', {}, false);\n    }\n    refresh()\n}\n\nreturn (\n    <Button color='primary' onClick={() => handleClick(documentRecord)} variant=\"contained\" target=\"_blank\">{loading && <CircularProgress color=\"inherit\" size={20} />}{documentVariant === 'facture' ? `  Générer une ${documentVariant}` : `  Créer un ${documentVariant}`}</Button>\n)\n}","import { Typography, Link, Table, TableRow, TableCell, TableBody, Button, TextField as ClassicalTextField } from '@material-ui/core';\nimport { useRefresh, FileField, BooleanInput, SaveButton, ReferenceArrayField, FormTab, TextInput, TextField, Datagrid } from 'react-admin';\nimport { useStyles } from './listEdit';\nimport { Autocomplete } from '@material-ui/lab';\n\nimport { WantedEquipmentList, WantedEquipmentCreate } from './wantedEquipment.js';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport React, { useState, useEffect } from 'react';\nimport { listTransform } from '../operations/operationEdit';\nimport { CreateQuoteButton } from './createQuote';\n\n\nimport customDataProvider from '../dataProvider';\n\nimport AddIcon from '@material-ui/icons/Add';\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\n\nconst StyledAccordion = withStyles({\n    root: {\n      width: '100%',\n    },\n  })(Accordion);\n\n\n  export const ServiceDialog = (props) => {\n    const [serviceId, setServiceId] = useState()\n    const [ services, setServices ] = useState()\n\n    const getServices = async () => {\n        const services = await dataProvider.getList('services', {'pagination': {}, 'sort': {'field': 'Type', 'order': 'asc'}, 'filter': {'Statut': 'Livraison / Service'}})\n        console.log(services, 'services')\n        setServices(services )\n    }\n    useEffect(() => {\n        getServices()\n    }, [])\n    const refresh = useRefresh();\n\n    const handleSave = async () => {\n        let params = {...listTransform(props.record), 'Livraison': props.record['Livraison'] ? props.record['Livraison'].concat([serviceId]) : [serviceId]}\n        await dataProvider.update('listes', {id: props.record.id, data: params})\n        refresh()\n    }\n\n    return(\n\n    <Dialog\n                        fullWidth\n                        maxWidth='sm'\n                        open={props.open}\n                        onClose={() => props.setOpen(false)}\n                    >\n                        <DialogTitle>Ajouter un service</DialogTitle>\n                        { services && services.data && <><DialogContent>\n                            <Autocomplete\n                                onChange={(event, newValue) => {setServiceId(newValue.id)}}\n                                options={services.data}\n                                getOptionLabel={(service) => `${service['Type']} - ${service['Prix HT']}€`}\n                                style={{ width: '100%' }}\n                                renderInput={(params) => <ClassicalTextField {...params} variant=\"outlined\" onChange={(event) => setServiceId(event.target.value)}/>}\n                                />\n                        </DialogContent>\n                        <DialogActions>\n                            <SaveButton\n                                handleSubmitWithRedirect={\n                                    () => {props.setOpen(false); handleSave()}\n                                }\n                                disabled={!serviceId}\n                            />\n                            <Button\n                                label=\"ra.action.cancel\"\n                                onClick={() => props.setOpen(false)}\n                            >\n                                <IconCancel />\n                            </Button>\n                        </DialogActions></>}\n                    </Dialog>)\n\n}\n\n\nexport const QuoteFormTab = props => {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n    console.log('props received', props)\n    return(\n        <FormTab\n                    label=\"Besoin\"\n                    path='devis'\n                    contentClassName={'classes.tab'}\n                    {...props}\n                >\n                    <br/>\n                    <Typography variant='h6'>Besoin</Typography>\n                    <br/>\n                    <TextInput error={props.error && props.error['Période installation souhaitée']} helperText={props.error && props.error['Période installation souhaitée']} source=\"Période installation souhaitée\" fullWidth formClassName={classes.inlineField}/>\n                    <TextInput error={props.error && props.error['Souhait de reprise']} helperText={props.error && props.error['Souhait de reprise']} source=\"Souhait de reprise\" formClassName={classes.inlineField} fullWidth/>\n                    <TextInput error={props.error && props.error['Acces']} helperText={props.error && props.error['Acces']} source=\"Acces\" formClassName={classes.inlineField} fullWidth/>\n                    <br/>\n                    <BooleanInput fullWidth formClassName={classes.inlineLinkField} source='Questions techniques'  label='Questions techniques posées'/>\n                    <Link target='_blank' formClassName={classes.inlineLinkField} href='https://docs.google.com/spreadsheets/d/1cqxuPtnwpCVY-Z3i9GFcfNpDgryigc5MdHM8ij1v_c8/edit#gid=949304201'>(Lien vers questions techniques)</Link>\n\n                    <TextInput fullWidth multiline error={props.error && props.error['Notes']} helperText={props.error && props.error['Notes']} source='Notes' label='Notes sur le besoin' formClassName={classes.fullWidth}/>\n                    <br/>\n                    <br/>\n                    <Typography variant='h6'>Machines</Typography>\n                    <ReferenceArrayField\n                        label=\"\"\n                        source=\"Machines désirées\" //quel est le nom du champ\n                        reference=\"machines_desirees\" // quel est le nom de la table / resource\n                        record={props.record}\n                        basePath={props.basePath}\n                        resource={props.resource}\n                        fullWidth\n                    >\n                        <WantedEquipmentList />\n                    </ReferenceArrayField>\n                    <StyledAccordion>\n                        <AccordionSummary>\n                            <AddIcon/>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <WantedEquipmentCreate record={props.record} basePath={props.basePath}/>\n                        </AccordionDetails>\n                    </StyledAccordion>\n                    <br/>\n                    <Typography fullWidth variant='h6'>Livraison et services additionnels</Typography>\n                    <br/>\n                    <ReferenceArrayField fullWidth source=\"Livraison\" reference=\"vesto_stock\" label=''>\n                        <Datagrid>\n                            <TextField source='Type'/>\n                            <TextField source='Prix HT' label='Prix HT'/>\n                        </Datagrid>\n                    </ReferenceArrayField>\n                    <br/>\n                    <Button color='primary' variant='contained' onClick={() => setOpen(true)} >\n                        Ajouter un service\n                    </Button>\n                    <ServiceDialog {...props} open={open} setOpen={setOpen} />\n                    <br/>\n                    <br/>\n                    <Typography variant='h6'>Total</Typography>\n                    <br/>\n                    <Table fullWidth>\n                    <TableBody>\n                        <TableRow key={'total'}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                Total\n                            </TableCell>\n                            <TableCell align=\"right\"><b>{props.record['Total']} €</b></TableCell>\n                            <TableCell align=\"right\">       </TableCell>\n                        </TableRow>\n                    </TableBody>\n                    </Table>\n                    <br/>\n                    <br/>\n                    <Typography variant='h6'>Devis</Typography>\n                    <br/>\n                    <Typography variant='body2'>Devis déjà créés</Typography>\n                    <TextInput fullWidth multiline error={props.error && props.error['Devis déjà créés']} helperText={props.error && props.error['Devis déjà créés']} source='Devis déjà créés' label='' formClassName={classes.fullWidth}/>\n                    <br/>\n                    <CreateQuoteButton documentRecord={props.record} />\n                    <br/>\n                    <br/>\n                    <Typography variant='body2'>Devis signés</Typography>\n                    <FileField source=\"Documents (devis, proforma, facture)\" label='' src='url' title='filename' target=\"_blank\"  fullWidth/>\n                    <br/>\n                    <Button href={`https://airtable.com/shri5NfTnd7KKTmXH?prefill_Client=${props.record.id}`} formClassName={classes.inline23Field} variant='contained' color='secondary' target='_blank' >Ajouter un devis signé</Button>\n                </FormTab>\n    )\n}","import { Typography } from '@material-ui/core';\nimport { ReferenceArrayField, FormTab, TextInput } from 'react-admin';\nimport { EquipmentCards } from '../equipments/equipmentCards';\nimport { useStyles } from './listEdit';\nimport { CreateQuoteButton } from './createQuote';\n\n\nexport const ProformaFormTab = props => {\n    const classes = useStyles()\n    return(\n        <FormTab\n                    label=\"Proforma\"\n                    path=\"proforma\"\n                    contentClassName={'classes.tab'}\n                    {...props}\n                >\n                    <br/>\n                    <Typography variant='h6'>Machines pour le proforma</Typography>\n                    <ReferenceArrayField source=\"Machines proforma\" reference=\"vesto_stock\">\n                        <EquipmentCards editable={true} var={'proforma'} record={props.record} />\n                    </ReferenceArrayField>\n                    <br/>\n                    <Typography variant='h6'>Proformas déjà créés</Typography>\n                    <br/>\n                    <TextInput fullWidth multiline source='Proforma déjà créés' label='' formClassName={classes.fullWidth}/>\n                    <br/>\n                    <CreateQuoteButton documentVariant='proforma' documentRecord={props.record} />\n                    <br/>\n                </FormTab>\n    )\n}","import { BooleanInput, FunctionField, useNotify, DeleteButton, Edit, useUpdate, SaveButton, RichTextField, DateField, Toolbar, ReferenceArrayField, TabbedForm, FormTab, TextInput, SingleFieldList, ChipField } from 'react-admin';\nimport { Typography, Button, Box, Chip } from '@material-ui/core';\nimport { GeneralFormTab } from './generalFormTab';\n\nimport { QuoteFormTab } from './quoteFormTab';\nimport { ProformaFormTab } from './proformaFormTab';\nimport { ListTitle, statusChoices } from './listesList';\nimport { Link } from 'react-router-dom';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { listTransform } from '../operations/operationEdit';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Comments } from '../comments/comments';\n\nexport const useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inlineLinkField: {\n        display: 'inline-block',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '60%',\n        marginRight: '6%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        width: '80%',\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    chip: {\n        margin: '0 5px 0 0',\n    }\n}));\n\nexport const ClientDetails = ({ record }) => (\n    <Box display=\"flex\" flexDirection=\"column\">\n        <Typography\n            component={RouterLink}\n            color=\"primary\"\n            to={`/clients/${record?.id}`}\n        >\n            {record['Prénom']} {record['Nom']}\n        </Typography>\n        <Typography to=''>\n            {record['Entreprise']}\n        </Typography>\n        <Typography to=''>\n            {record['Téléphone']}\n        </Typography>\n    </Box>\n);\n\n\nexport const clientTransform = (data) => {\n    let newData = data;\n\n    //company fields\n    delete data['Entreprise']\n    delete data['Concept / Notes entreprise']\n    delete data['Adresse']\n    delete data['SIRET']\n\n    // computed fields\n    delete data['Fiche hubspot']\n    delete data['id']\n    delete data['Client']\n\n    return newData\n}\n\nexport const companyTransform = (data) => {\n    let newData = data;\n\n    //client fields\n    delete data['Nom']\n    delete data['Prénom']\n    delete data['Téléphone']\n    delete data['Source']\n    delete data['email']\n    delete data['Notes']\n\n    // computed fields\n    delete data['Fiche hubspot']\n    delete data['id']\n    delete data['Client']\n\n    return newData\n}\n\nexport const TabbedListEdit = props => {\n    const [update] = useUpdate('clients');\n\n    const [clientProps, setClientProps] = useState({})\n    const [companyProps, setCompanyProps] = useState({})\n\n    \n    const classes = useStyles()\n\n    const CustomToolbar = props => (\n        <Toolbar {...props} classes={{toolbar: classes.toolbar}} alwaysEnableSaveButton>\n            <SaveButton onClick={handleClientSave} />\n            <DeleteButton undoable={false} />\n        </Toolbar>\n    );\n\n    const handleClientSave = () => {\n        const id = clientProps.id\n        const clientData = clientTransform(clientProps)\n        const companyData = companyTransform(companyProps)\n        const data = {...clientData, ...companyData}\n        console.log('update', data, id)\n        update(\n            { payload: { id: id, data: data } },\n            {\n                onSuccess: ({ data }) => {\n                    //console.log('success')\n                },\n                onFailure: ({ error }) => {\n                }\n            }\n        );\n    }\n    \n    \n    return (\n            <TabbedForm {...props} variant='outlined' redirect={false} toolbar={<CustomToolbar />} warnWhenUnsavedChanges >\n                <GeneralFormTab setClientProps={setClientProps} setCompanyProps={setCompanyProps} />\n                <QuoteFormTab {...props} />\n                <ProformaFormTab {...props} />\n                <FormTab label=\"Opérations\" path=\"operations\">\n                    <br/><Typography variant='h6' fullWidth>Général</Typography><br/>\n                    <TextInput error={props.error && props.error['Adresse installation']} helperText={props.error && props.error['Adresse installation']} source=\"Adresse installation\" formClassName={classes.fullWidth} fullWidth/>\n                    <TextInput error={props.error && props.error['Acces']} helperText={props.error && props.error['Acces']}source=\"Acces\" fullWidth formClassName={classes.inlineHalfField}/>\n                    <TextInput error={props.error && props.error['Souhait de reprise']} helperText={props.error && props.error['Souhait de reprise']} source=\"Souhait de reprise\" formClassName={classes.inlineHalfField} fullWidth/>\n\n                    <br/><Typography variant='h6' fullWidth>Délais</Typography><br/>\n                    <Typography variant='body1' fullWidth>Si install dans plus de 2 semaines</Typography><br/>\n                    <TextInput error={props.error && props.error['Période installation souhaitée']} helperText={props.error && props.error['Période installation souhaitée']} source=\"Période installation souhaitée\" formClassName={classes.inlineField}/>\n                    <Typography variant='body1' fullWidth>Si install dans moins de 2 semaines</Typography><br/>\n                    <TextInput source=\"Urgence et indisponibilités\" formClassName={classes.inline23Field} fullWidth/>\n                    <BooleanInput  formClassName={classes.inlineHalfField} fullWidth source='Créneau install booké' label='Créneau install booké dans le calendrier'/>\n                    <BooleanInput formClassName={classes.inlineHalfField} fullWidth source='Mail client avec ops en copie' label='Mail client avec ops en copie envoyé' />\n\n                    <br/><Typography variant='h6' fullWidth>Statut des opérations</Typography><br/>\n                    <ChipField source='Statut intervention' formClassName={classes.inlineField} />\n                    <DateField source=\"Debut installation\" label=\"Date d'installation\" formClassName={classes.inlineField}/>\n                    <DateField source='Debut prochaine intervention' label='Date prochaine intervention (SAV)' formClassName={classes.inlineField}/>\n                    <RichTextField label='CR pour les sales' source='CR pour les Sales' formClassName={classes.fullWidth}/>\n                    <BooleanInput source='Call de fin'/>\n\n                </FormTab>\n                <FormTab label=\"Facturation\" path=\"factures\">\n                    <br/><Typography variant='h6' fullWidth>Factures clients</Typography><br/>\n                    <ReferenceArrayField label='' fullWidth source='Facture client' reference='factures_clients'>\n                        <SingleFieldList>\n                            <FunctionField fullWidth render={record => <Chip className={classes.chip} label={`${record['Nom']} ${record['Total (HT)'] || '0'} €`}/>} />\n                        </SingleFieldList>\n                    </ReferenceArrayField>\n                    <br/>\n                    <br/>\n                    <Button target='_blank' color=\"primary\" variant=\"contained\" component={Link}\n                        to={{\n                            pathname: '/factures_clients/create',\n                            search: `?source=${JSON.stringify({ 'Client': [props.record['id']] })}`,\n                        }}\n                    >Créer facture client</Button>\n                    <br/><Typography variant='h6' fullWidth>Factures partenaires</Typography><br/>\n                    <Typography variant='body' fullWidth>Les factures reconditionneurs sont créées automatiquement quand la demande passe en statut \"devis signé\"</Typography><br/>\n                    <ReferenceArrayField label='' fullWidth source='Services reconditionneurs' reference='factures'>\n                        <SingleFieldList>\n                            <FunctionField fullWidth render={record => <Chip className={classes.chip} label={`${record['Name'] || ''} ${record['Valeur (HT)'] || '0'} €`}/>} />\n                        </SingleFieldList>\n                    </ReferenceArrayField>\n                    <br/>\n                    <br/>\n                    <Button target='_blank' color=\"primary\" variant=\"contained\" component={Link}\n                        to={{\n                            pathname: '/factures/create',\n                            search: `?source=${JSON.stringify({ 'Client': [props.record['id']] })}`,\n                        }}\n                    >Créer facture partenaire</Button>\n\n\n                </FormTab>\n            </TabbedForm>\n    );\n                    }\n\nconst requestedProps = {\n    1: [],\n    2: [\n        'Owner'\n        ],\n    3: [\n        'Notes',\n    ],\n    4: [\n        'Période installation souhaitée',\n        'Acces',\n        'Souhait de reprise',\n        'Questions techniques',\n        ],\n    5: [\n        'Devis déjà créés'\n        ],\n    6: [],\n    7: [\n        'Documents (devis, proforma, facture)'\n    ],\n    8: [\n        'Adresse installation',\n        'Période installation souhaitée',\n        'Créneau install booké',\n        'Mail client avec ops en copie'\n    ],\n    9: [],\n    10: [\n        'Call de fin',\n    ],\n    11: [],\n    12: [],\n}\n\nconst valdateRequestedProps = (statusNumber, data) => {\n    let error = {}\n    let isError = false\n    for (var i = 1; i < statusNumber + 1; i++) {\n        // eslint-disable-next-line no-loop-func\n        requestedProps[i] && requestedProps[i].forEach(prop => {\n            if (!data[prop]) {\n                isError = true\n                error[prop] = 'Obligatoire'\n            }\n        })  \n    }\n    return isError ? error : false\n    \n}\n\nconst getStatusNumber = (name) => {\n    let number = 1\n    statusChoices.forEach(status => {\n        if (status.id === name) {\n            number = status.number\n        }\n    })\n    return number\n}\n\n\nexport const ListeEdit = props => {\n    const [error, setError] = useState(false)\n    const notify = useNotify();\n\n    const validateData = data => {\n        setError(false)\n        var validateError = valdateRequestedProps(getStatusNumber(data['Statut']), data)\n        if (validateError) {\n            setError(validateError)\n            console.log('has error', validateError)\n            let errorText = 'Il manque les informations suivantes pour passer au statut ' + data['Statut'] + ': '\n            let errors = Object.keys(validateError)\n            errors.forEach(error => {\n                console.log(error)\n                errorText += error + ', '\n            })\n            delete data['Statut']\n            notify(errorText, 'warning', {}, false);\n        }\n        return(listTransform(data))\n        \n    }\n    return(\n    <Edit undoable={false} title={<ListTitle/>} aside={<Comments/>} transform={validateData} {...props} >\n        <TabbedListEdit error={error}/>\n    </Edit>\n    )\n};","import * as React from \"react\";\nimport {\n    List,\n    Datagrid,\n    TextField,\n    EmailField,\n    ChipField,\n    Edit,\n    SimpleForm,\n    TextInput,\n    ReferenceArrayField,\n    SingleFieldList,\n    SelectInput,\n    Pagination\n } from 'react-admin';\n import { Typography } from '@material-ui/core';\n import { useStyles } from './lists/listEdit';\n import { sourceChoices } from './lists/generalFormTab';\n import { Comments } from './comments/comments';\n\n\nconst clientTransform = (data) => {\n    let newData = data;\n\n\n    // computed fields\n    delete data['Fiche hubspot']\n    delete data['id']\n    delete data['Client']\n\n    return newData\n}\n\nconst ClientPagination = props => <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />;\n\n\nexport const CustomClientList = props => (\n    <List {...props} perPage={100} pagination={<ClientPagination />} actions={false}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"Client\" />\n            <TextField source=\"Entreprise\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"Téléphone\" />\n            {/* <ReferenceArrayField source=\"Listes\" label='Demandes' reference=\"listes\">\n                <SingleFieldList>\n                    <ChipField source='Nom'/>\n                </SingleFieldList>\n            </ReferenceArrayField> */}\n        </Datagrid>\n    </List>\n);\n\nexport const ClientEdit = props => {\n    const classes = useStyles()\n    return(\n    <Edit {...props} aside={<Comments/>} transform={clientTransform}>\n        <SimpleForm>\n            <br /><Typography variant='h6'>Infos Client</Typography>\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth source='Nom' />\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth source='Prénom' />\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth source='Téléphone' />\n            <TextInput variant='outlined' formClassName={classes.inline23Field} fullWidth source='email' />\n            <SelectInput choices={sourceChoices} optionText='id' variant='outlined' formClassName={classes.inlineField} fullWidth source='Source' />\n            <TextInput variant='outlined' multiline formClassName={classes.fullWidth} fullWidth source='Notes' />\n            <br /><Typography variant='h6'>Infos Entreprise</Typography>\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth source='Entreprise' />\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth source='Adresse' />\n            <TextInput variant='outlined' formClassName={classes.inlineField} fullWidth label='SIRET' source='SIRET' />\n            <TextInput variant='outlined' multiline formClassName={classes.fullWidth} fullWidth source='Concept / Notes entreprise' />\n            <br /><Typography variant='h6'>Toutes les demandes du client</Typography>\n                <ReferenceArrayField fullWidth source='Listes' reference='listes'>\n                    <SingleFieldList>\n                        <ChipField source='Nom' />\n                    </SingleFieldList>\n                </ReferenceArrayField>\n        </SimpleForm>\n    </Edit>)\n};","import { SimpleForm, useRedirect, useDataProvider, ReferenceArrayInput, Toolbar, AutocompleteInput, Button as RAButton, useCreate, FormWithRedirect, ReferenceInput, Create } from 'react-admin';\nimport { Typography, Switch, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { ClientForm, CompanyForm } from './generalFormTab';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStyles as formUseStyles, clientTransform, companyTransform} from './listEdit';\nimport { listTransform } from '../operations/operationEdit';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nconst useStyles = makeStyles(theme => ({\n    switch: {\n        width: '58px',\n    },\n}))\n\n\n\nconst ListCreateForm = props => {\n    const classes = useStyles()\n    const formClasses = formUseStyles()\n    const [create] = useCreate('clients');\n    const [createList] = useCreate('listes');\n    const [ clientProps, setClientProps] = useState()\n    const [ companyProps, setCompanyProps] = useState()\n    const [clients, setClients] = useState([])\n    const [newClient, setNewClient] = useState(true)\n    const dataProvider = useDataProvider()\n\n    \n    const redirect = useRedirect();\n    const getClients = async () => {\n        const clients = await dataProvider.getList('clients', {'pagination': {'perPage': 1000}, 'sort': {'field': 'id', 'order': 'asc'}, 'filter': {}})\n        setClients(clients)\n        return clients\n    }\n\n    useEffect(() => {\n        getClients()\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    const CustomToolbar = props => (\n        <Toolbar {...props} classes={{toolbar: formClasses.toolbar}} alwaysEnableSaveButton>\n            <RAButton variant='contained' onClick={() => (newClient && handleClientSave(props))} label='Créer' ><SaveIcon/></RAButton>\n        </Toolbar>\n    );\n\n    const createListMethod = (id) => {\n        createList(\n            { payload: { data: {'Client': [id], 'Statut': '1. A attribuer'} } },\n            {\n                onSuccess: ({ data }) => {\n                    console.log('success list', data)\n                    redirect('/listes/' + data.id)\n                },\n                onFailure: ({ error }) => {\n                }\n            }\n        )\n    }\n\n    const handleClientSave = (saveProps) => {\n        const clientData = clientTransform(clientProps)\n        const companyData = companyTransform(companyProps)\n        const data = {...clientData, ...companyData}\n        console.log('handlesubmit props', saveProps)\n        create(\n            { payload: { data: data } },\n            {\n                onSuccess: ({ data }) => {\n                    createListMethod(data.id)\n                },\n                onFailure: ({ error }) => {\n                }\n            }\n        );\n    }\n\n    return(\n        <SimpleForm {...props} variant='outlined' toolbar={<CustomToolbar />}>\n            <FormGroup row>\n                <FormControlLabel control={\n                    <Switch classes={{root: classes.switch}} checked={newClient} onChange={(event) => setNewClient(event.target.checked)}/>}\n                    label={newClient ? 'Nouveau client' : 'Déjà client'}/>\n            </FormGroup><br/>\n            { !newClient && <ReferenceArrayInput fullWidth source='Client' reference='clients'>\n                <AutocompleteInput setFilter={() => false} choices={clients.data ? clients.data : []} optionText={(record) => (`${(record && record['Prénom']) || ''}  ${(record && record['Nom']) || ''} -  ${(record && record['Entreprise']) || ''}`)} />\n            </ReferenceArrayInput>}\n            { newClient && <><Typography variant='h6'>Infos Client</Typography>\n            <ReferenceInput link={false} fullWidth source='Client[0]' label='' reference='clients'>\n                <FormWithRedirect {...props} setClientProps={setClientProps} render={formProps => <ClientForm {...formProps}/>}/>\n            </ReferenceInput>\n            <br/><Typography variant='h6'>Infos Entreprise</Typography>\n            <ReferenceInput link={false} fullWidth source='Client[0]' label='' reference='clients'>\n                <FormWithRedirect {...props} setCompanyProps={setCompanyProps} save={(data) => console.log(data)} render={formProps => <CompanyForm {...formProps}/>}/>\n            </ReferenceInput></>}\n        </SimpleForm>\n    )\n}\n\nexport const ListCreate = props => {\n    const [clientId, setClientId] = useState()\n    console.log('client id', clientId)\n\n    const getClientId = () => {\n        console.log ('in get client id', clientId)\n        return(clientId)\n    }\n    const transform = (data, clientId) => {\n        console.log('client id in transform', getClientId())\n        let newData = data\n        if (data['Client'] || clientId) {\n            newData['Client'] = data['Client'] ? [data['Client']] :  [clientId]\n        } else {\n            return(transform(data))\n        }\n        return(listTransform(newData))\n    }\n\n    return(\n    <Create {...props} transform={transform}>\n        <ListCreateForm setClientId={setClientId} />\n    </Create>\n)};","import * as React from \"react\";\nimport { useCallback } from 'react';\nimport { Datagrid, TextField, FunctionField, ArrayField, ReferenceArrayField, ChipField, SingleFieldList, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, CreateButton, ExportButton } from 'react-admin';\nimport { Card, CardContent, Grid, Tabs, Tab } from '@material-ui/core';\nimport { Price } from '../equipments/equipmentList';\n\n\n\n\nconst processingStatus = [\n    { id: '1', name: 'A retraiter' },\n    { id: '2', name: 'En attente de relecture' },\n    { id: '3', name: 'Bloqué' },\n];\n\nconst otherStatus = [\n    { id: '1', name: 'Réservé' },\n    { id: '2', name: 'Vendu par Vesto' },\n    { id: '3', name: 'Vendu hors Vesto' },\n];\n\nconst tabs = [ processingStatus, otherStatus ]\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={3}>\n            {tabs.map(choices => (\n                <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {choices.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.name}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid>))}\n            </Grid>\n            <Grid item xs={9}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <TextField source=\"Type\" />\n                                <TextField source=\"Marque\" />\n                                <TextField source=\"Modele\" />\n                                <ArrayField source=\"Owner\"><SingleFieldList><ChipField source=\"name\" /></SingleFieldList></ArrayField>\n                                <FunctionField label=\"Prix HT\" render={record => <Price>{record['Prix HT']}&nbsp;€</Price>}/>\n                                <ReferenceArrayField source='Reconditionneur' reference='reconditionneurs' >\n                                    <SingleFieldList>\n                                        <ChipField source='Nom'/>\n                                    </SingleFieldList>\n                                </ReferenceArrayField>\n                                <ChipField source='Source'/>\n                                \n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\n\n\n\n\nexport const TabbedEquipmentProcessingList = props => (\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut': 'A retraiter' }}\n        perPage={10}\n    >\n        <TopToolbar>\n            <CreateButton basePath=\"/retraitement_machines\" />\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>\n);","import { Create, TextInput, ReferenceArrayInput, AutocompleteArrayInput, useNotify, SingleFieldList, ReferenceArrayField, ChipField, FunctionField, TextField, SelectInput, FileField, SimpleForm, NumberInput } from 'react-admin';\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { equipmentStatusChoices, etatChoices, alimentationChoices } from '../equipments/equipmentAttributesChoices';\nimport customDataProvider from '../dataProvider';\nimport { CustomImageField, validateValues } from './equipmentProcessingEdit';\nimport { equipmentTransform } from '../equipments/equipmentEdit';\n\n\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '60%',\n        marginRight: '6%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        width: '80%',\n    },\n}));\n\nconst createTransformData = data => {\n    let newData = equipmentTransform(data)\n    let photos = data['Photo'] && data['Photo'].map(photo => (\n        {'url': photo['url'], 'filename': photo['filename']})\n    )\n    let photo2 = data['Photo 2 (TECH)'] && data['Photo 2 (TECH)'].map(photo => (\n        {'url': photo['url'], 'filename': photo['filename']})\n    )\n    let photo3 = data['Photo 3 (TECH)'] && data['Photo 3 (TECH)'].map(photo => (\n        {'url': photo['url'], 'filename': photo['filename']})\n    )\n    let photosPlaque = data['Photo plaque'] && data['Photo plaque'].map(photo => (\n        {'url': photo['url'], 'filename': photo['filename']})\n    )\n    let ficheTechnique = data['Fiche technique'] && data['Fiche technique'].map(photo => (\n        {'url': photo['url'], 'filename': photo['filename']})\n    )\n    newData['Photo'] = photos\n    newData['Photo 2 (TECH)'] = photo2\n    newData['Photo 3 (TECH)'] = photo3\n    newData['Photo plaque'] = photosPlaque\n    newData['Fiche technique'] = ficheTechnique\n    return newData\n}\n\n\nexport const EquipmentProcessingCreate = props => {\n    const getCat = async () => {\n        const subCategories = await dataProvider.getList('categories', {'pagination': {}, 'sort': {'field': 'Catégorie', 'order': 'asc'}, 'filter': {}})\n        setSubCategories(subCategories)\n        return subCategories\n    }\n\n    const [subCategories, setSubCategories] = useState([])\n    useEffect(() => {\n        getCat()\n    }, [])\n    const classes = useStyles(props);\n\n    const notify = useNotify();\n    //let previousState = props.record['Statut']\n    const [error, setError] = useState(false)\n    const [price, setPrice] = useState(props.record && props.record['Prix HT'])\n    const [initialPrice, setInitialPrice] = useState(props.record && props.record['Prix neuf HT'])\n\n\n    let reduction = Math.round((price - initialPrice)/initialPrice*100)\n\n    const onChangePrice = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const onChangeInitialPrice = (event) => {\n        setInitialPrice(event.target.value)\n    }\n\n\n    const validateAvailableData = (data) => {\n        if (data['Statut'] === 'Disponible' ) {\n            var validateError = validateValues(data)\n            if (validateError) {\n                setError(validateError)\n                data['Statut'] = 'A retraiter'\n                console.log('has error', error, validateError)\n                notify('Pas assez d\\'infos pour passer en disponible', 'warning', {}, false);\n            }\n            return createTransformData(data);\n        }\n        return createTransformData(data)\n    }\n\n    return(\n    <Create {...props} transform={validateAvailableData} undoable={false} >\n        <SimpleForm variant='outlined' {...props} >\n            <TextInput source=\"Type\" fullWidth formClassName={classes.inline23Field} error={props.error && props.error['Type']} helperText={props.error && props.error['Type']}/>\n            <ReferenceArrayField source='Reconditionneur' reference='reconditionneurs' formClassName={classes.inline6Field} >\n                <SingleFieldList>\n                    <ChipField source='Nom'/>\n                </SingleFieldList>\n            </ReferenceArrayField>\n            <TextField source='Source' formClassName={classes.inline6Field} />\n            <SelectInput source='Statut' formClassName={classes.inlineField} choices={equipmentStatusChoices} optionText='name'/>\n\n\n            <Typography variant='h6'>Caractéristiques</Typography>\n            <TextInput source=\"Marque\" formClassName={classes.inlineField} error={props.error && props.error['Marque']} helperText={props.error && props.error['Marque']}/>\n            <TextInput source=\"Modele\" formClassName={classes.inlineField} error={props.error && props.error['Modele']} helperText={props.error && props.error['Modele']}/>\n            <TextInput source=\"Année\" formClassName={classes.inlineField}/>\n\n            <NumberInput label='Prix HT' source=\"Prix HT\" value={price} onChange={onChangePrice} formClassName={classes.inlineField} error={props.error && props.error['Prix HT']} helperText={props.error && props.error['Prix HT']} />\n            <NumberInput label='Prix neuf HT' source=\"Prix neuf HT\" value={initialPrice} onChange={onChangeInitialPrice} formClassName={classes.inlineField} error={props.error && props.error['Prix neuf HT']} helperText={props.error && props.error['Prix neuf HT']}/>\n            <FunctionField className={reduction <= -30 ? classes.green : classes.red} label='Pourcentage de réduction' render={record => price && initialPrice && `${reduction} %`} formClassName={classes.inlineField} />\n\n\n            <TextInput source=\"Dimensions\" formClassName={classes.inlineField} error={props.error && props.error['Dimensions']} helperText={props.error && props.error['Dimensions']}/>\n            \n            <TextInput source=\"Capacité\" formClassName={classes.inlineField} error={props.error && props.error['Capacité']} helperText={props.error && props.error['Capacité']} />\n            <SelectInput source=\"Alimentation\" choices={alimentationChoices} optionText='name' formClassName={classes.inlineField} error={props.error && props.error['Alimentation']} helperText={props.error && props.error['Alimentation']} />\n\n            <TextInput source=\"Puissance\" formClassName={classes.inlineField}/>\n            <TextInput source=\"Poids\" formClassName={classes.inlineField}/>\n            \n            <SelectInput formClassName={classes.inlineField} source=\"Etat\" choices={etatChoices} optionText='name' error={props.error && props.error['Etat']} helperText={props.error && props.error['Etat']}/>\n            <Typography variant='h6'>Catégories et Notes</Typography>\n            <ReferenceArrayInput source='Sous-Catégorie' reference='categories' formClassName={classes.inlineHalfField}>\n                <AutocompleteArrayInput setFilter={null} fullWidth choices={subCategories.data ? subCategories.data : []} optionText={(record) => (`${record && record['Nom']}  -  ${record && record['Catégorie']}`)} formClassName={classes.inlineField} meta={{'touched': props.error && props.error['Sous-Catégorie'], 'error': props.error && props.error['Sous-Catégorie'], 'submitError': props.error && props.error['Sous-Catégorie']}} helperText={props.error && props.error['Sous-Catégorie']}/>\n            </ReferenceArrayInput>\n\n            <TextInput multiline fullWidth source=\"Avis Vesto\" formClassName={classes.inlineHalfField} />\n            <TextInput multiline fullWidth source=\"Notes\" formClassName={classes.inlineHalfField}/>\n    \n            <Typography variant='h6'>Documents</Typography>\n            <CustomImageField addLabel={true} source=\"Photo\" source1=\"Photo 2 (TECH)\" source2=\"Photo 3 (TECH)\" src='url' formClassName={classes.inlineHalfField}/>\n            <CustomImageField addLabel={true} source=\"Photo plaque\" src='url' formClassName={classes.inlineHalfField}/>\n\n        \n            <FileField source=\"Fiche technique\" src='url' title='filename' target=\"_blank\"  fullWidth/>\n            \n        </SimpleForm>\n    </Create>\n    )};","\nimport * as React from 'react';\nimport { useState, Fragment } from 'react';\nimport { ListItemIcon, MenuItem, Box, Typography, Tooltip, List, Collapse } from '@material-ui/core';\nimport {\n    DashboardMenuItem,\n    MenuItemLink,\n    Layout,\n} from 'react-admin';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ClientIcon from '@material-ui/icons/Group';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport EuroIcon from '@material-ui/icons/Euro';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BuildIcon from '@material-ui/icons/Build';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\n\nconst StyledMenuItem = styled(MenuItemLink)`\n    font-weight: 1000;\n    margin: 5px 32px;\n    padding: 6px;\n    padding-left: 6px!important;\n    background-color: #5fd3a1;\n    border-radius: 5px;\n    color: white;\n    justify-content: center;\n    `;\n\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(4), color: '#192D4B' },\n    sidebarIsOpen: {\n        width: 'auto',\n        '& a': {\n            paddingLeft: theme.spacing(4),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            paddingLeft: theme.spacing(2),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n    category: {\n        color: '#192D4B'\n    }\n}));\n\nexport const CustomLayout = (props) => {\n    return (\n        <Layout\n            {...props}\n            menu={Menu}\n        />\n    );\n};\n\n\nconst Menu = ({ onMenuClick }) => {\n    const [state, setState] = useState({\n        menuOps: true,\n        menuSales: true,\n        menuMkp: true,\n        menuAdmin: false,\n    });\n    //const open = useSelector((state) => state.admin.ui.sidebarOpen);\n    const open = true;\n\n    const handleToggle = (menu) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    const dense = false;\n\n    //return(<Box mt={1}/>)\n\n    return (\n        <Box mt={1}>\n            {' '}\n            <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n            <SubMenu\n                handleToggle={() => handleToggle('menuSales')}\n                isOpen={state.menuSales}\n                sidebarIsOpen={open}\n                name='Sales'\n                icon={<EuroIcon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/clients`}\n                    primaryText={'Clients'}\n                    leftIcon={<ClientIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/listes`}\n                    primaryText={'Demandes'}\n                    leftIcon={<AssignmentIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/vesto_stock`}\n                    primaryText={'Vesto Stock'}\n                    leftIcon={<ViewModuleIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <StyledMenuItem\n                    to={`/listes/create`}\n                    className={{'color': 'red'}}\n                    primaryText={'Nouvelle demande'}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuOps')}\n                isOpen={state.menuOps}\n                sidebarIsOpen={open}\n                name=\"Ops\"\n                icon={<BuildIcon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/operations`}\n                    primaryText={'Opérations'}\n                    leftIcon={<LocalShippingIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/sav`}\n                    primaryText={'SAV'}\n                    leftIcon={<BuildIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuMkp')}\n                isOpen={state.menuMkp}\n                sidebarIsOpen={open}\n                name=\"Marketplace\"\n                icon={<PeopleIcon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/retraitement_machines`}\n                    primaryText={'Retraitement'}\n                    leftIcon={<AssignmentTurnedInIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/machines_desirees`}\n                    primaryText={'Machines désirées'}\n                    leftIcon={<SearchIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/reconditionneurs`}\n                    primaryText={'Reconditionneurs'}\n                    leftIcon={<PeopleIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuAdmin')}\n                isOpen={state.menuAdmin}\n                sidebarIsOpen={open}\n                name=\"Admin\"\n                icon={<DescriptionIcon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/factures`}\n                    primaryText={'Factures partenaires'}\n                    leftIcon={<DescriptionIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/factures_clients`}\n                    primaryText={'Factures clients'}\n                    leftIcon={<DescriptionIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n        </Box>\n    );\n};\n\nconst SubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n\n    const classes = useStyles();\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle} className={classes.category}>\n            <ListItemIcon className={classes.icon} >\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"h6\" >\n                {name}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                    <Tooltip title={name} placement=\"right\">\n                        {header}\n                    </Tooltip>\n                )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};","import React, { useState } from 'react';\nimport { TextField, useNotify, DateTimeInput, Edit, TextInput, ReferenceField, SimpleForm, SelectInput, ReferenceArrayField, NumberInput } from 'react-admin';\nimport { longTermStatusChoices, shortTermStatusChoices } from './operationsList';\nimport { SAVStatusChoices } from './savList';\nimport { EquipmentCards } from '../equipments/equipmentCards';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ClientDetails } from '../lists/listEdit';\nimport {  Typography, Drawer } from '@material-ui/core';\nimport { EquipmentEdit } from '../equipments/equipmentEdit'\nimport { listTransform } from './operationEdit';\n\nimport { Comments } from '../comments/comments';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '66%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        maxWidth: '80%',\n    }\n}))\n\n\nconst statutsChoices = longTermStatusChoices.concat(shortTermStatusChoices).concat(SAVStatusChoices)\n\n\nexport const SAVEdit = props => {\n    const [open, setOpen] = useState(false);\n    const [id, setId] = useState(false);\n    const classes = useStyles();\n    const notify = useNotify();\n\n    const handleClick = id => {\n        console.log('id click', id)\n        setOpen(true)\n        setId(id)\n    }\n    const handleClose = props => {\n        setOpen(false)\n        setId(false)\n    }\n\n    const validateData = (data) => {\n        if (data['Statut intervention'] === 'Date install planifiée' ) {\n            if (!(data['Debut installation'] && data['Fin installation'])) {\n                data['Statut intervention'] = 'Date install à planifier';\n                notify('Les dates d\\'installation ne sont pas renseignées', 'warning', {}, false);\n            }\n        }\n        else if (data['Statut intervention'] === 'Terminé' ) {\n            if (!data['CR pour les Sales']) {\n                data['Statut intervention'] = 'Date install planifiée';\n                notify('Il manque le CR pour les sales', 'warning', {}, false);\n            }\n        }\n        return listTransform(data)\n    }\n    return(\n    <Edit {...props} transform={validateData} undoable={false} aside={<Comments/>}>\n        <SimpleForm warnWhenUnsavedChanges redirect={false} >\n            <TextField source=\"Nom\" formClassName={classes.inlineField} />\n            <SelectInput optionText='id' formClassName={classes.inlineField} choices={statutsChoices} source=\"Statut intervention\" />\n            <ReferenceField source=\"Client\" reference=\"clients\" formClassName={classes.inlineField} >\n                <ClientDetails />\n            </ReferenceField>\n            \n            <TextInput fullWidth multiline label='Notes installs / SAV' source=\"Notes installs / SAV\" formClassName={classes.fullWidth}/>\n            <br/>\n            <Typography variant='h6'>Informations SAV</Typography><br/>\n            <TextInput source=\"Adresse installation\" formClassName={classes.fullWidth} fullWidth/>\n            <DateTimeInput source=\"Debut prochaine intervention\" formClassName={classes.inlineField}/>\n            <DateTimeInput source=\"Fin prochaine intervention\" formClassName={classes.inlineField}/>\n            <TextInput fullWidth multiline label='CR pour les sales' source='CR pour les Sales' formClassName={classes.fullWidth}/>\n\n\n            <br/>\n            <Typography variant='h6'>Informations install</Typography><br/>\n            \n            <TextInput source=\"Période installation souhaitée\" formClassName={classes.inlineField}/>\n            <TextInput source=\"Urgence et indisponibilités\" formClassName={classes.inline23Field}/>\n\n            <DateTimeInput source=\"Debut installation\" formClassName={classes.inlineField}/>\n            <DateTimeInput source=\"Fin installation\" formClassName={classes.inline23Field}/>\n            <NumberInput source='Frais supplémentaires' formClassName={classes.inlineField}/>\n            <TextInput source='Notes frais' label='Notes'  formClassName={classes.inline23Field}/>\n            <br/>\n            <Typography variant='h6'>Machines</Typography><br/>\n            <ReferenceArrayField source=\"Machines devis\" reference=\"vesto_stock\">\n                <EquipmentCards editable={false} handleClick={handleClick}/>\n            </ReferenceArrayField>\n            <Drawer open={open} anchor=\"right\" >\n                {id && <EquipmentEdit\n                    recordId={id}\n                    onCancel={handleClose}\n                    {...props}\n                />}\n            </Drawer>\n        </SimpleForm>\n    </Edit>\n)};","import { Card, CardContent, Grid, Tabs, Tab } from '@material-ui/core';\nimport { Datagrid, DateField, TextField, FunctionField, ReferenceArrayField, ChipField, SingleFieldList, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, CreateButton, ExportButton } from 'react-admin';\nimport { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '500px',\n    },\n}))\n\nexport const billsStatus = [\n    { id: 'A compléter', name: 'A compléter' },\n    { id: 'En attente install', name: 'En attente install' },\n    { id: 'Install finie - facture non reçue', name: 'Install finie - facture non reçue' },\n    { id: 'Facture à régler', name: 'Facture à régler' },\n    { id: 'Réglée', name: 'Réglée' },\n];\n\n\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={3}>\n                <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {billsStatus.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.name}\n                            classes={classes}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid>\n            </Grid>\n            <Grid item xs={9}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <TextField source=\"Name\" />\n                                <FunctionField label=\"Valeur (HT)\" render={record => record['Valeur (HT)'] ? `${record['Valeur (HT)']} €` : 'Non définie'} />\n                                <ReferenceArrayField source=\"Acteur\" reference=\"reconditionneurs\">\n                                    <SingleFieldList>\n                                        <ChipField source='Nom'/>\n                                    </SingleFieldList>\n                                </ReferenceArrayField>\n                                <ReferenceArrayField source=\"Client\" reference=\"listes\">\n                                    <SingleFieldList>\n                                        <ChipField source='Nom'/>\n                                    </SingleFieldList>\n                                </ReferenceArrayField>\n                                <DateField source=\"Date échéance\" />\n\n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport const TabbedPartnersBillList = props => {\n    return(\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut': 'Facture à régler' }}\n        perPage={10}\n        \n    >\n        <TopToolbar>\n            <CreateButton basePath=\"/factures\" />\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>)\n};","import { NumberInput, FileField, SimpleForm, DateInput, Edit, required, TextInput, SelectInput, Create, AutocompleteArrayInput, ReferenceArrayField, ChipField, SingleFieldList } from 'react-admin';\nimport { Button, Typography } from '@material-ui/core';\nimport { useDataProvider, ReferenceArrayInput, AutocompleteInput } from 'react-admin';\nimport { billsStatus } from './partnersBillList';\nimport { useStyles } from '../lists/listEdit';\nimport { useState, useEffect } from 'react'\nimport { Comments } from '../comments/comments';\n\n\nconst PartnersBillEditForm = (props) => {\n    const classes = useStyles()\n    return(\n        <SimpleForm {...props} variant='outlined'>\n                <SelectInput source=\"Statut\" choices={billsStatus} formClassName={classes.inlineField} fullWidth/>\n                <DateInput source=\"Date échéance\" formClassName={classes.inlineField} fullWidth/>\n                <NumberInput source='Valeur (HT)' label='Valeur (HT)' />\n                <ReferenceArrayField formClassName={classes.inlineField} source=\"Acteur\" reference=\"reconditionneurs\">\n                    <SingleFieldList>\n                        <ChipField source='Nom'/>\n                    </SingleFieldList>\n                </ReferenceArrayField>\n                <ReferenceArrayField formClassName={classes.inlineField} source=\"Client\" reference=\"listes\">\n                    <SingleFieldList>\n                        <ChipField source='Nom'/>\n                    </SingleFieldList>\n                </ReferenceArrayField>\n                <br/>\n                <TextInput formClassName={classes.fullWidth} multiline fullWidth source=\"Notes\" />\n                <br/>\n                <FileField source=\"Facture\" src='url' title='filename' target=\"_blank\"  fullWidth/>\n                <Button href={`https://airtable.com/shryQIshaRPxDIE8L?prefill_Facture%20reconditionneur=${props.record.id}`} formClassName={classes.inline23Field} variant='contained' color='secondary' target='_blank' >Ajouter une facture</Button>\n        </SimpleForm>\n    )\n}\nexport const PartnersBillEdit = props => {\n    return(\n        <Edit {...props} aside={<Comments/>}>\n            <PartnersBillEditForm />\n        </Edit>\n    )\n};\n\nexport const PartnersBillCreate = (props) => {\n    const classes = useStyles()\n    const dataProvider = useDataProvider()\n    const [ clients, setClients ] = useState()\n    const [ refurbishers, setRefurbishers ] = useState()\n\n    const getClients = async () => {\n        const clients = await dataProvider.getList('listes', {'pagination': {'perPage': 1000}, 'sort': {'field': 'id', 'order': 'asc'}, 'filter': {}})\n        setClients(clients)\n        return clients\n    }\n\n    const getRefurbishers = async () => {\n        const refurbishers = await dataProvider.getList('reconditionneurs', {'pagination': {'perPage': 1000}, 'sort': {'field': 'id', 'order': 'asc'}, 'filter': {}})\n        setRefurbishers(refurbishers)\n        return refurbishers\n    }\n\n    useEffect(() => {\n        getClients()\n        getRefurbishers()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const transform = (data) => {\n        let newData = data\n        if (data['Acteur']) {\n            newData['Acteur'] = [data['Acteur']]\n        }\n        return(newData)\n    }\n\n    return(\n    <Create {...props} transform={transform}>\n        <SimpleForm variant='outlined'>\n            <Typography variant='h6'>Nouvelle facture</Typography>\n                <SelectInput source=\"Statut\" choices={billsStatus} formClassName={classes.inlineField} fullWidth validate={required()}/>\n                <NumberInput source=\"Valeur (HT)\" label='Valeur (HT)' formClassName={classes.inlineField} fullWidth validate={required()}/>\n\n                <DateInput source=\"Date échéance\" formClassName={classes.inlineField} fullWidth/>\n                { refurbishers && <ReferenceArrayInput  formClassName={classes.inline23Field} fullWidth source='Acteur' reference='reconditionneurs' >\n                    <AutocompleteInput setFilter={() => false} choices={refurbishers.data ? refurbishers.data : []} optionText={(record) => (`${(record && record['Nom']) || ''}`)} />\n                </ReferenceArrayInput>}\n                { clients && <ReferenceArrayInput formClassName={classes.inline23Field} fullWidth source='Client' label='Demande client' reference='listes'>\n                    <AutocompleteArrayInput setFilter={() => false} choices={clients.data || []} optionText={(record) => (`${(record && record['Nom']) || ''}`)} />\n                </ReferenceArrayInput>}\n                <br/>\n                <TextInput multiline formClassName={classes.fullWidth} fullWidth source=\"Notes\" />\n        </SimpleForm>\n    </Create>\n    )\n}","import { Card, CardContent, Grid, Tabs, Tab } from '@material-ui/core';\nimport { Datagrid, BooleanField, TextField, FunctionField, ReferenceArrayField, ChipField, SingleFieldList, useListContext, ListContextProvider, ListBase, Pagination, TopToolbar, CreateButton, ExportButton } from 'react-admin';\nimport { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '500px',\n    },\n}))\n\nexport const billsStatus = [\n    { id: 'Devis signé', name: 'Devis signé' },\n    { id: 'Install cette semaine', name: 'Install cette semaine' },\n    { id: 'A envoyer', name: 'A envoyer' },\n    { id: 'Envoyé', name: 'Envoyé' },\n    { id: 'A relancer', name: 'A relancer' },\n    { id: 'Réglé', name: 'Réglé' },\n];\n\n\n\nconst TabbedDatagrid = (props) => {\n    const listContext = useListContext();\n    const { filterValues, setFilters, displayedFilters } = listContext;\n    const handleChange = useCallback(\n        (event, value) => {\n            setFilters &&\n                setFilters(\n                    { ...filterValues, 'Statut': value },\n                    displayedFilters\n                );\n        },\n        [displayedFilters, filterValues, setFilters]\n    );\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={3}>\n                <Grid item xs={12}>\n                <Card>\n                <CardContent>\n                <Tabs\n                    orientation=\"vertical\"\n                    centered\n                    value={filterValues['Statut']}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                >\n                    {billsStatus.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.name}\n                            classes={classes}\n                        />\n                    ))}\n                </Tabs>\n                 </CardContent>\n                 </Card>\n                 <br/>\n                 </Grid>\n            </Grid>\n            <Grid item xs={9}>\n                <Card>\n                    <CardContent>\n                        <ListContextProvider\n                            value={{ ...listContext }}\n                        >\n                            <Datagrid {...props} rowClick=\"edit\">\n                                <TextField source=\"Nom\" />\n                                <FunctionField label=\"Total (HT)\" render={record => record['Total (HT)'] ? `${record['Total (HT)']} €` : 'Non défini'} />\n                                <ReferenceArrayField source=\"Client\" reference=\"listes\">\n                                    <SingleFieldList>\n                                        <ChipField source='Nom'/>\n                                    </SingleFieldList>\n                                </ReferenceArrayField>\n                                <FunctionField label=\"Acompte (TTC)\" render={record => `${Math.round((record['Total (HT)'] || 0) * 1.2 * 0.3 * 100)/100} €`} />\n                                <BooleanField source='Acompte payé'/>\n                            </Datagrid>\n                            <Pagination />\n                        </ListContextProvider>\n                    </CardContent>\n                 </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport const TabbedClientsBillList = props => {\n    return(\n    <ListBase\n        {...props}\n        filterDefaultValues={{ 'Statut': 'Install cette semaine' }}\n        perPage={10}\n        \n    >\n        <TopToolbar>\n            <CreateButton basePath=\"/factures_clients\" />\n            <ExportButton />\n        </TopToolbar>\n        <TabbedDatagrid />\n    </ListBase>)\n};","import { NumberInput, useGetOne, NumberField, SimpleForm, BooleanInput, FunctionField, Edit, required, TextInput, SelectInput, Create, AutocompleteArrayInput, ReferenceArrayField, ChipField, SingleFieldList } from 'react-admin';\nimport { Typography, Grid } from '@material-ui/core';\nimport { useDataProvider, ReferenceArrayInput } from 'react-admin';\nimport { billsStatus } from './clientsBillList';\nimport { useStyles } from '../lists/listEdit';\nimport { useState, useEffect } from 'react';\nimport { CreateQuoteButton } from '../lists/createQuote';\nimport { Comments } from '../comments/comments';\n\n\n\nexport const Fees = (props) => {\n    const classes = useStyles()\n\n    // mettre des fields materiel ui avec props.record. ...\n    return (\n        <Grid {...props} container spacing={0}>\n            <NumberField variant='outlined' className={classes.inlineField} fullWidth source='Frais supplémentaires' />\n            <TextInput variant='outlined' className={classes.inline23Field} fullWidth source='Notes frais' />\n        </Grid>)\n}\n\n\nconst ClientsBillEditForm = (props) => {\n    const classes = useStyles()\n    const [amount, setAmount] = useState(props.record && props.record['Total (HT)'])\n    // get related list\n    let list = useGetOne('listes', props.record && props.record['Client'] && props.record['Client'][0])\n\n    return(\n        <SimpleForm {...props} redirect={false} variant='outlined'>\n                <SelectInput source=\"Statut\" choices={billsStatus} />\n                <NumberInput onChange={(event) => setAmount(event.target.value)} source=\"Total (HT)\" label='Total (HT)' formClassName={classes.inlineHalfField} fullWidth validate={required()}/>\n                <FunctionField formClassName={classes.inlineHalfField} fullWidth label=\"Total (TTC)\" render={record => `${Math.round(amount * 1.2 * 100)/100} €`} />\n                <FunctionField formClassName={classes.inlineHalfField} fullWidth label=\"Acompte (TTC)\" render={record => `${Math.round(amount * 1.2 * 0.3 * 100)/100} €`} />\n                <BooleanInput  formClassName={classes.inlineHalfField} fullWidth source='Acompte payé'/>\n                <br/>\n                <ReferenceArrayField source=\"Client\" reference=\"listes\"  label='Demande client associée'>\n                    <SingleFieldList>\n                        <ChipField source='Nom'/>\n                    </SingleFieldList>\n                </ReferenceArrayField>\n                {/*<ReferenceField link={false} formClassName={classes.inline23Field} fullWidth source='Client[0]' reference='listes'>\n                    <FormWithRedirect {...props} render={formProps => <Fees {...formProps} />} />\n    </ReferenceField>*/}\n                <br/>\n                <TextInput formClassName={classes.fullWidth} multiline fullWidth source=\"Notes\" />\n                <br/>\n                { list && list.data && <CreateQuoteButton documentVariant='facture' documentRecord={list.data} deposit={props.record['Acompte payé'] ? Math.round(amount * 1.2 * 0.3 * 100)/100 : 0}/>}\n                <br/>\n                {/*<FileField source=\"Facture\" src='url' title='filename' target=\"_blank\"  fullWidth/>*/}\n                {/*<Button href={`https://airtable.com/shr4koFG89mHYYMhC?prefill_Facture%20client=${props.record.id}`} formClassName={classes.inline23Field} variant='contained' color='secondary' target='_blank' >Ajouter une facture PDF</Button>*/}\n        </SimpleForm>\n    )\n}\nexport const ClientsBillEdit = props => {\n    return(\n        <Edit {...props} aside={<Comments/>} >\n            <ClientsBillEditForm />\n        </Edit>\n    )\n};\n\nexport const ClientsBillCreate = (props) => {\n    const classes = useStyles()\n    const dataProvider = useDataProvider()\n    const [ clients, setClients ] = useState()\n\n    const getClients = async () => {\n        const clients = await dataProvider.getList('listes', {'pagination': {'perPage': 1000}, 'sort': {'field': 'id', 'order': 'asc'}, 'filter': {}})\n        setClients(clients)\n        return clients\n    }\n\n    useEffect(() => {\n        getClients()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const [amount, setAmount] = useState(0)\n\n    const transform = (data) => {\n        let newData = data\n        if (data['Client']) {\n            newData['Client'] = data['Client']\n        }\n        return(newData)\n    }\n\n    console.log('props create', props)\n\n    return(\n    <Create {...props} transform={transform}>\n        <SimpleForm variant='outlined'>\n            <Typography variant='h6'>Nouvelle facture</Typography>\n                <SelectInput source=\"Statut\" choices={billsStatus} formClassName={classes.inlineField} fullWidth validate={required()}/>\n                <NumberInput onChange={(event) => setAmount(event.target.value)} source=\"Total (HT)\" label='Total (HT)' formClassName={classes.inlineField} fullWidth validate={required()}/>\n                <FunctionField formClassName={classes.inlineField} fullWidth label=\"Total (TTC)\" render={record => `${Math.round(amount * 1.2 * 100)/100} €`} />\n                <ReferenceArrayInput formClassName={classes.inline23Field} fullWidth source='Client' label='Demande client associée' reference='listes'>\n                    <AutocompleteArrayInput setFilter={() => false} choices={(clients && clients.data) || []} optionText={(record) => (`${(record && record['Nom']) || ''}`)} />\n                </ReferenceArrayInput>\n                <br/>\n                <TextInput multiline formClassName={classes.fullWidth} fullWidth source=\"Notes\" />\n        </SimpleForm>\n    </Create>\n    )\n}","import { List, Datagrid, TextField } from 'react-admin';\n\n\nexport const RefurbisherList = props => (\n    <List {...props} perPage={25}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"Nom\" />\n            <TextField source=\"Statut\" />\n            <TextField source=\"Typologie\" />\n            <TextField source=\"Actif\" />\n            <TextField source=\"Localisation\" />\n            <TextField source=\"Téléphone\" />\n        </Datagrid>\n    </List>\n);","import { Create, Edit, TextInput, SimpleForm, SelectInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport { Comments } from '../comments/comments';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    inlineField: {\n        display: 'inline-block',\n        width: '25%',\n        marginRight: '8%',\n        minWidth: '200px',\n    },\n    inline6Field: {\n        display: 'inline-block',\n        width: '14%',\n        marginRight: '3%',\n        minWidth: '50px',\n    },\n    inlineHalfField: {\n        display: 'inline-block',\n        width: '45%',\n        marginRight: '5%',\n        minWidth: '300px',\n    },\n    inline23Field: {\n        display: 'inline-block',\n        width: '66%',\n        minWidth: '200px',\n    },\n    fullWidth: {\n        maxWidth: '80%',\n    }\n}))\n\nconst statusChoices = [\n    {'id': 'Contacté'},\n    {'id': 'Rencontré'},\n    {'id': '1ers dossiers'},\n    {'id': 'Signature Charte'},\n    {'id': 'Onboardé'},\n    {'id': 'Onboardé sans Charte'},\n]\n\nconst typeChoices = [\n    {'id': 'Artisan / PME'},\n    {'id': 'Industriel'},\n    {'id': 'Fabricant'},\n    {'id': 'Transporteur'},\n    {'id': 'Autre'},\n]\n\nconst activChoices = [\n    {'id': 'Actif'},\n    {'id': 'Non actif'},\n    {'id': ''},\n]\n\nconst mkpStatusChoices = [\n    {'id': 'Veille'},\n    {'id': 'A relancer'},\n    {'id': 'Relancé'},\n]\n\nexport const refurbisherTransform = (data) => {\n    let newData = {...data}\n    delete newData['id']\n    return newData;\n};\n\nexport const RefurbisherEdit = props => {\n    const classes = useStyles();\n    return(\n    <Edit {...props} transform={refurbisherTransform} aside={<Comments/>} >\n        <SimpleForm variant='outlined'>\n            <TextInput source=\"Nom\" formClassName={classes.inlineField}/>\n            <br/>\n            <Typography variant='h6'>Informations générales</Typography>\n            <SelectInput source=\"Statut\" choices={statusChoices} optionText='id' formClassName={classes.inlineField}/>\n            <SelectInput source=\"Typologie\" choices={typeChoices} optionText='id' formClassName={classes.inlineField}/>\n            <TextInput source=\"Localisation\" formClassName={classes.inlineField}/>\n            <SelectInput source=\"Actif\" choices={activChoices} optionText='id' formClassName={classes.inlineField}/>\n            <TextInput source=\"Téléphone\" formClassName={classes.inlineField}/>\n            <br/>\n            <Typography variant='h6'>Informations Marketplace</Typography>\n            <SelectInput source='Statut de communication' choices={mkpStatusChoices} optionText='id' />\n            <TextInput  fullWidth multiline source='Questions' />\n        </SimpleForm>\n    </Edit>\n    )\n};\n\nexport const RefurbisherCreate = props => {\n    const classes = useStyles();\n    return(\n    <Create {...props} transform={refurbisherTransform} >\n        <SimpleForm variant='outlined'>\n            <TextInput source=\"Nom\" formClassName={classes.inlineField}/>\n            <br/>\n            <Typography variant='h6'>Informations générales</Typography>\n            <SelectInput source=\"Statut\" choices={statusChoices} optionText='id' formClassName={classes.inlineField}/>\n            <SelectInput source=\"Typologie\" choices={typeChoices} optionText='id' formClassName={classes.inlineField}/>\n            <TextInput source=\"Localisation\" formClassName={classes.inlineField}/>\n            <SelectInput source=\"Actif\" choices={activChoices} optionText='id' formClassName={classes.inlineField}/>\n            <TextInput source=\"Téléphone\" formClassName={classes.inlineField}/>\n            <br/>\n            <Typography variant='h6'>Informations Marketplace</Typography>\n            <SelectInput source='Statut de communication' choices={mkpStatusChoices} optionText='id' />\n            <TextInput  fullWidth multiline source='Questions' />\n        </SimpleForm>\n    </Create>\n    )\n};","import * as React from \"react\";\nimport { Admin, ListGuesser, Resource, EditGuesser } from 'react-admin';\nimport customDataProvider from './dataProvider';\nimport { CustomClientList, ClientEdit } from './clients';\nimport { TabbedListList } from './lists/listesList';\nimport { ListCreate } from './lists/listCreate';\nimport { ListeEdit } from './lists/listEdit';\nimport { TabbedEquipmentProcessingList } from './equipmentProcessing/equipmentProcessingList'\nimport { EquipmentProcessingEdit } from './equipmentProcessing/equipmentProcessingEdit';\nimport { EquipmentProcessingCreate } from './equipmentProcessing/equipmentProcessingCreate';\nimport { CustomLayout } from './Layout'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { TabbedOperationsList } from './operations/operationsList';\nimport { TabbedSAVList } from './operations/savList';\nimport { OperationEdit } from './operations/operationEdit';\nimport { SAVEdit } from './operations/savEdit';\nimport { TabbedPartnersBillList } from './partners_bill/partnersBillList';\nimport { PartnersBillEdit, PartnersBillCreate } from './partners_bill/partnersBillEdit';\nimport { TabbedClientsBillList } from './clients_bill/clientsBillList';\nimport { ClientsBillEdit, ClientsBillCreate } from './clients_bill/clientsBillEdit';\n\nimport { RefurbisherList } from './refurbisher/refurbisherList';\nimport { RefurbisherEdit, RefurbisherCreate } from './refurbisher/refurbisherEdit';\nimport 'fontsource-roboto';\n\n\n\nimport { EquipmentList } from './equipments/equipmentList';\n//import jsonServerProvider from 'ra-data-json-server';\n\nconst dataProvider = customDataProvider('https://api.airtable.com/v0/app7dXu5oLwGP1OX5');\n//const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\n\nconst theme = createMuiTheme({\n  typography: {\n    //fontFamily: 'Roboto',\n    h6: {\n      fontSize: '1.1rem',\n      fontWeight: '800',\n    },\n  },\n    palette: {\n      primary: {\n        main: '#F9BC60',\n        contrastText: '#fff'\n      },\n      secondary: {\n        light: '#2660A4',\n        main: '#2660A4',\n        dark: '#192D4B',\n      },\n    },\n});\n\nconst App = () => (\n  <Admin dataProvider={dataProvider} theme={theme} layout={CustomLayout} >\n    <Resource name=\"listes\" options={{ label: 'Demandes' }} list={TabbedListList} edit={ListeEdit} create={ListCreate} />\n    <Resource name=\"clients\" options={{ label: 'Clients' }} list={CustomClientList} edit={ClientEdit}  />\n    <Resource name=\"machines_desirees\" options={{ label: 'Machines désirées' }} list={ListGuesser} edit={EditGuesser}/>\n    <Resource name=\"vesto_stock\" options={{ label: 'Vesto Stock' }} list={EquipmentList}/>\n    <Resource name=\"categories\" list={ListGuesser} edit={EditGuesser} />\n    <Resource name=\"retraitement_machines\" list={TabbedEquipmentProcessingList} edit={EquipmentProcessingEdit} create={EquipmentProcessingCreate}/>\n    <Resource name=\"operations\" list={TabbedOperationsList} edit={OperationEdit} />\n    <Resource name=\"sav\" list={TabbedSAVList} edit={SAVEdit} />\n    <Resource name=\"factures\" list={TabbedPartnersBillList} edit={PartnersBillEdit} create={PartnersBillCreate}/>\n    <Resource name=\"reconditionneurs\" list={RefurbisherList} edit={RefurbisherEdit} create={RefurbisherCreate} />\n    <Resource name=\"comments\" />\n    <Resource name=\"services\"/>\n    <Resource name=\"factures_clients\" list={TabbedClientsBillList} edit={ClientsBillEdit} create={ClientsBillCreate}/>\n  </Admin>\n);\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}