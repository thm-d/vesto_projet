{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FieldTitle, useResourceContext } from 'ra-core';\nexport var FilterButtonMenuItem = forwardRef(function (props, ref) {\n  var filter = props.filter,\n      onShow = props.onShow,\n      autoFocus = props.autoFocus;\n  var resource = useResourceContext(props);\n  var handleShow = useCallback(function () {\n    onShow({\n      source: filter.props.source,\n      defaultValue: filter.props.defaultValue\n    });\n  }, [filter.props.defaultValue, filter.props.source, onShow]);\n  return React.createElement(MenuItem, {\n    className: \"new-filter-item\",\n    \"data-key\": filter.props.source,\n    \"data-default-value\": filter.props.defaultValue,\n    key: filter.props.source,\n    onClick: handleShow,\n    autoFocus: autoFocus,\n    ref: ref\n  }, React.createElement(FieldTitle, {\n    label: filter.props.label,\n    source: filter.props.source,\n    resource: resource\n  }));\n});\nFilterButtonMenuItem.propTypes = {\n  filter: PropTypes.element.isRequired,\n  onShow: PropTypes.func.isRequired,\n  resource: PropTypes.string,\n  autoFocus: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/thomasd./test_technique_stock/node_modules/ra-ui-materialui/esm/list/filter/FilterButtonMenuItem.js"],"names":["React","forwardRef","useCallback","PropTypes","MenuItem","FieldTitle","useResourceContext","FilterButtonMenuItem","props","ref","filter","onShow","autoFocus","resource","handleShow","source","defaultValue","createElement","className","key","onClick","label","propTypes","element","isRequired","func","string","bool"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,SAA/C;AACA,OAAO,IAAIC,oBAAoB,GAAGN,UAAU,CAAC,UAAUO,KAAV,EAAiBC,GAAjB,EAAsB;AAC/D,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AAAA,MAA2BC,MAAM,GAAGH,KAAK,CAACG,MAA1C;AAAA,MAAkDC,SAAS,GAAGJ,KAAK,CAACI,SAApE;AACA,MAAIC,QAAQ,GAAGP,kBAAkB,CAACE,KAAD,CAAjC;AACA,MAAIM,UAAU,GAAGZ,WAAW,CAAC,YAAY;AACrCS,IAAAA,MAAM,CAAC;AACHI,MAAAA,MAAM,EAAEL,MAAM,CAACF,KAAP,CAAaO,MADlB;AAEHC,MAAAA,YAAY,EAAEN,MAAM,CAACF,KAAP,CAAaQ;AAFxB,KAAD,CAAN;AAIH,GAL2B,EAKzB,CAACN,MAAM,CAACF,KAAP,CAAaQ,YAAd,EAA4BN,MAAM,CAACF,KAAP,CAAaO,MAAzC,EAAiDJ,MAAjD,CALyB,CAA5B;AAMA,SAAQX,KAAK,CAACiB,aAAN,CAAoBb,QAApB,EAA8B;AAAEc,IAAAA,SAAS,EAAE,iBAAb;AAAgC,gBAAYR,MAAM,CAACF,KAAP,CAAaO,MAAzD;AAAiE,0BAAsBL,MAAM,CAACF,KAAP,CAAaQ,YAApG;AAAkHG,IAAAA,GAAG,EAAET,MAAM,CAACF,KAAP,CAAaO,MAApI;AAA4IK,IAAAA,OAAO,EAAEN,UAArJ;AAAiKF,IAAAA,SAAS,EAAEA,SAA5K;AAAuLH,IAAAA,GAAG,EAAEA;AAA5L,GAA9B,EACJT,KAAK,CAACiB,aAAN,CAAoBZ,UAApB,EAAgC;AAAEgB,IAAAA,KAAK,EAAEX,MAAM,CAACF,KAAP,CAAaa,KAAtB;AAA6BN,IAAAA,MAAM,EAAEL,MAAM,CAACF,KAAP,CAAaO,MAAlD;AAA0DF,IAAAA,QAAQ,EAAEA;AAApE,GAAhC,CADI,CAAR;AAEH,CAX2C,CAArC;AAYPN,oBAAoB,CAACe,SAArB,GAAiC;AAC7BZ,EAAAA,MAAM,EAAEP,SAAS,CAACoB,OAAV,CAAkBC,UADG;AAE7Bb,EAAAA,MAAM,EAAER,SAAS,CAACsB,IAAV,CAAeD,UAFM;AAG7BX,EAAAA,QAAQ,EAAEV,SAAS,CAACuB,MAHS;AAI7Bd,EAAAA,SAAS,EAAET,SAAS,CAACwB;AAJQ,CAAjC","sourcesContent":["import * as React from 'react';\nimport { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FieldTitle, useResourceContext } from 'ra-core';\nexport var FilterButtonMenuItem = forwardRef(function (props, ref) {\n    var filter = props.filter, onShow = props.onShow, autoFocus = props.autoFocus;\n    var resource = useResourceContext(props);\n    var handleShow = useCallback(function () {\n        onShow({\n            source: filter.props.source,\n            defaultValue: filter.props.defaultValue,\n        });\n    }, [filter.props.defaultValue, filter.props.source, onShow]);\n    return (React.createElement(MenuItem, { className: \"new-filter-item\", \"data-key\": filter.props.source, \"data-default-value\": filter.props.defaultValue, key: filter.props.source, onClick: handleShow, autoFocus: autoFocus, ref: ref },\n        React.createElement(FieldTitle, { label: filter.props.label, source: filter.props.source, resource: resource })));\n});\nFilterButtonMenuItem.propTypes = {\n    filter: PropTypes.element.isRequired,\n    onShow: PropTypes.func.isRequired,\n    resource: PropTypes.string,\n    autoFocus: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}