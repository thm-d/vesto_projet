{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport { isRequired, FieldTitle, composeSyncValidators } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl, FormHelperText } from '@material-ui/core';\nimport { LinearProgress } from '../../layout';\nimport InputHelperText from '../InputHelperText';\nimport sanitizeInputRestProps from '../sanitizeInputRestProps';\nimport Labeled from '../Labeled';\nimport { ArrayInputContext } from './ArrayInputContext';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\n\nexport var ArrayInput = function (props) {\n  var className = props.className,\n      defaultValue = props.defaultValue,\n      label = props.label,\n      loaded = props.loaded,\n      loading = props.loading,\n      children = props.children,\n      helperText = props.helperText,\n      record = props.record,\n      resource = props.resource,\n      source = props.source,\n      validate = props.validate,\n      variant = props.variant,\n      disabled = props.disabled,\n      _a = props.margin,\n      margin = _a === void 0 ? 'dense' : _a,\n      rest = __rest(props, [\"className\", \"defaultValue\", \"label\", \"loaded\", \"loading\", \"children\", \"helperText\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]);\n\n  var sanitizedValidate = Array.isArray(validate) ? composeSyncValidators(validate) : validate;\n  var fieldProps = useFieldArray(source, __assign(__assign({\n    initialValue: defaultValue,\n    validate: sanitizedValidate\n  }, rest), {\n    isEqual: function (allPreviousValues, allNewValues) {\n      return isEqual(allPreviousValues, allNewValues);\n    }\n  }));\n\n  if (loading) {\n    return React.createElement(Labeled, {\n      label: label,\n      source: source,\n      resource: resource,\n      className: className,\n      margin: margin\n    }, React.createElement(LinearProgress, null));\n  }\n\n  var _b = fieldProps.meta,\n      error = _b.error,\n      submitError = _b.submitError,\n      touched = _b.touched,\n      dirty = _b.dirty;\n  var arrayInputError = getArrayInputError(error || submitError);\n  return React.createElement(FormControl, __assign({\n    fullWidth: true,\n    margin: \"normal\",\n    className: className,\n    error: (touched || dirty) && !!arrayInputError\n  }, sanitizeInputRestProps(rest)), React.createElement(InputLabel, {\n    htmlFor: source,\n    shrink: true,\n    error: (touched || dirty) && !!arrayInputError\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired(validate)\n  })), React.createElement(ArrayInputContext.Provider, {\n    value: fieldProps\n  }, cloneElement(Children.only(children), __assign(__assign({}, fieldProps), {\n    record: record,\n    resource: resource,\n    source: source,\n    variant: variant,\n    margin: margin,\n    disabled: disabled\n  }))), !!((touched || dirty) && arrayInputError) || helperText ? React.createElement(FormHelperText, {\n    error: (touched || dirty) && !!arrayInputError\n  }, React.createElement(InputHelperText, {\n    touched: touched || dirty,\n    error: arrayInputError,\n    helperText: helperText\n  })) : null);\n};\nArrayInput.propTypes = {\n  // @ts-ignore\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultValue: PropTypes.any,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  helperText: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  record: PropTypes.object,\n  options: PropTypes.object,\n  validate: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.func)])\n};\nArrayInput.defaultProps = {\n  options: {},\n  fullWidth: true\n};\nexport var getArrayInputError = function (error) {\n  if (Array.isArray(error)) {\n    return undefined;\n  }\n\n  return error;\n};","map":{"version":3,"sources":["/Users/thomasd./test_technique_stock/node_modules/ra-ui-materialui/esm/input/ArrayInput/ArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","Children","PropTypes","isEqual","isRequired","FieldTitle","composeSyncValidators","useFieldArray","InputLabel","FormControl","FormHelperText","LinearProgress","InputHelperText","sanitizeInputRestProps","Labeled","ArrayInputContext","ArrayInput","props","className","defaultValue","label","loaded","loading","children","helperText","record","resource","source","validate","variant","disabled","_a","margin","rest","sanitizedValidate","Array","isArray","fieldProps","initialValue","allPreviousValues","allNewValues","createElement","_b","meta","error","submitError","touched","dirty","arrayInputError","getArrayInputError","fullWidth","htmlFor","shrink","Provider","value","only","propTypes","node","string","any","bool","oneOfType","object","options","func","arrayOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport { isRequired, FieldTitle, composeSyncValidators, } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl, FormHelperText } from '@material-ui/core';\nimport { LinearProgress } from '../../layout';\nimport InputHelperText from '../InputHelperText';\nimport sanitizeInputRestProps from '../sanitizeInputRestProps';\nimport Labeled from '../Labeled';\nimport { ArrayInputContext } from './ArrayInputContext';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\nexport var ArrayInput = function (props) {\n    var className = props.className, defaultValue = props.defaultValue, label = props.label, loaded = props.loaded, loading = props.loading, children = props.children, helperText = props.helperText, record = props.record, resource = props.resource, source = props.source, validate = props.validate, variant = props.variant, disabled = props.disabled, _a = props.margin, margin = _a === void 0 ? 'dense' : _a, rest = __rest(props, [\"className\", \"defaultValue\", \"label\", \"loaded\", \"loading\", \"children\", \"helperText\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]);\n    var sanitizedValidate = Array.isArray(validate)\n        ? composeSyncValidators(validate)\n        : validate;\n    var fieldProps = useFieldArray(source, __assign(__assign({ initialValue: defaultValue, validate: sanitizedValidate }, rest), { isEqual: function (allPreviousValues, allNewValues) {\n            return isEqual(allPreviousValues, allNewValues);\n        } }));\n    if (loading) {\n        return (React.createElement(Labeled, { label: label, source: source, resource: resource, className: className, margin: margin },\n            React.createElement(LinearProgress, null)));\n    }\n    var _b = fieldProps.meta, error = _b.error, submitError = _b.submitError, touched = _b.touched, dirty = _b.dirty;\n    var arrayInputError = getArrayInputError(error || submitError);\n    return (React.createElement(FormControl, __assign({ fullWidth: true, margin: \"normal\", className: className, error: (touched || dirty) && !!arrayInputError }, sanitizeInputRestProps(rest)),\n        React.createElement(InputLabel, { htmlFor: source, shrink: true, error: (touched || dirty) && !!arrayInputError },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired(validate) })),\n        React.createElement(ArrayInputContext.Provider, { value: fieldProps }, cloneElement(Children.only(children), __assign(__assign({}, fieldProps), { record: record, resource: resource, source: source, variant: variant, margin: margin, disabled: disabled }))),\n        !!((touched || dirty) && arrayInputError) || helperText ? (React.createElement(FormHelperText, { error: (touched || dirty) && !!arrayInputError },\n            React.createElement(InputHelperText, { touched: touched || dirty, error: arrayInputError, helperText: helperText }))) : null));\n};\nArrayInput.propTypes = {\n    // @ts-ignore\n    children: PropTypes.node,\n    className: PropTypes.string,\n    defaultValue: PropTypes.any,\n    isRequired: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    helperText: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    record: PropTypes.object,\n    options: PropTypes.object,\n    validate: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.arrayOf(PropTypes.func),\n    ]),\n};\nArrayInput.defaultProps = {\n    options: {},\n    fullWidth: true,\n};\nexport var getArrayInputError = function (error) {\n    if (Array.isArray(error)) {\n        return undefined;\n    }\n    return error;\n};\n"]},"metadata":{},"sourceType":"module"}